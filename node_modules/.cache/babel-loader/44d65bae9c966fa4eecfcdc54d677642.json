{"ast":null,"code":"import { useVisiteStore } from \"../../pinia/useVisite\";\nimport { reactive, computed } from \"vue\";\nexport default {\n  __name: 'SwitchComponent',\n  props: {\n    index: {\n      type: Number,\n      default: 0\n    },\n    value: {\n      type: Object,\n      default: {}\n    },\n    name: {\n      type: String,\n      default: \"\"\n    }\n  },\n  emits: {\n    unvalidatedEvent: null,\n    // if we want an event without validation\n    customChange: s => {\n      if (s && typeof s === \"string\") {\n        return true;\n      } else {\n        console.warn(`Invalid submit event payload!`);\n        return false;\n      }\n    }\n  },\n  setup(__props, {\n    expose: __expose,\n    emit\n  }) {\n    __expose();\n    const props = __props;\n\n    /* eslint-disable */\n    const appointement = useVisiteStore();\n    const handleChange = event => {\n      emit(\"switchChange\", event.target.value, event.target.checked);\n    };\n    const visible = computed(() => appointement.isFamily);\n    const __returned__ = {\n      appointement,\n      props,\n      emit,\n      handleChange,\n      visible,\n      get useVisiteStore() {\n        return useVisiteStore;\n      },\n      reactive,\n      computed\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AA+BA,SAASA,cAAc,QAAQ,uBAAuB;AACtD,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAFxC;IAGA,MAAMC,YAAY,GAAGH,cAAc,EAAE;IA2BrC,MAAMI,YAAY,GAAIC,KAAK,IAAK;MAC9BC,IAAI,CAAC,cAAc,EAAED,KAAK,CAACE,MAAM,CAACC,KAAK,EAACH,KAAK,CAACE,MAAM,CAACE,OAAO,CAAC;IAC/D,CAAC;IAED,MAAMC,OAAO,GAAGR,QAAQ,CAAC,MAAMC,YAAY,CAACQ,QAAQ,CAAC","names":["useVisiteStore","reactive","computed","appointement","handleChange","event","emit","target","value","checked","visible","isFamily"],"sources":["/Users/you/Desktop/work_dev/inso-frontend-master/src/components/base/SwitchComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div\r\n      v-if=\"!visible ? '' : visible\"\r\n      class=\"inline-flex items-center border-2 border-slate-300 rounded-xl\"\r\n    >\r\n      <div class=\"relative inline-block h-3 w-6 cursor-pointer rounded-full\">\r\n        <input\r\n          :id=\"`switch-${index}`\"\r\n          @input=\"handleChange\"\r\n          :value=\"JSON.stringify(value)\"\r\n          :name=\"name\"\r\n          type=\"checkbox\"\r\n          class=\"peer absolute h-3 w-6 cursor-pointer appearance-none rounded-full bg-blue-gray-100 transition-colors duration-300 checked:bg-blue-500 peer-checked:border-blue-500 peer-checked:before:bg-blue-500\"\r\n        />\r\n        <label\r\n          :for=\"`switch-${index}`\"\r\n          class=\"before:content[''] absolute top-2/4 -left-1 h-4 w-4 -translate-y-2/4 cursor-pointer rounded-full border border-blue-gray-10 bg-slate-400 shadow-md transition-all duration-300 before:absolute before:top-2/4 before:left-2/4 before:block before:h-10 before:w-10 before:-translate-y-2/4 before:-translate-x-2/4 before:rounded-full before:bg-blue-gray-500 before:opacity-0 before:transition-opacity hover:before:opacity-10 peer-checked:translate-x-full peer-checked:border-blue-500 peer-checked:before:bg-blue-500\"\r\n        >\r\n          <div\r\n            class=\"top-2/4 left-3/4 inline-block -translate-x-2/4 -translate-y-2/4 rounded-full p-5\"\r\n            data-ripple-dark=\"true\"\r\n          ></div>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n/* eslint-disable */\r\nimport { useVisiteStore } from \"../../pinia/useVisite\";\r\nimport { reactive, computed } from \"vue\";\r\nconst appointement = useVisiteStore();\r\nconst props = defineProps({\r\n  index: {\r\n    type: Number,\r\n    default: 0,\r\n  },\r\n  value: {\r\n    type: Object,\r\n    default: {},\r\n  },\r\n  name: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n});\r\n\r\nconst emit = defineEmits({\r\n  unvalidatedEvent: null, // if we want an event without validation\r\n  customChange: (s) => {\r\n    if (s && typeof s === \"string\") {\r\n      return true;\r\n    } else {\r\n      console.warn(`Invalid submit event payload!`);\r\n      return false;\r\n    }\r\n  },\r\n});\r\nconst handleChange = (event) => {\r\n  emit(\"switchChange\", event.target.value,event.target.checked);\r\n};\r\n\r\nconst visible = computed(() => appointement.isFamily);\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n"]},"metadata":{},"sourceType":"module"}