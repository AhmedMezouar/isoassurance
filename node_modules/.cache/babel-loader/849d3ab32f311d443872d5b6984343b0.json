{"ast":null,"code":"import SpecialityService from \"@/services/SpecialityService\";\nexport const namespaced = true;\nexport const state = {\n  specialities: [],\n  specialitiesTotal: 0,\n  speciality: {},\n  specialityName: \"\"\n};\nexport const mutations = {\n  SET_SPECIALITIES(state, specialities) {\n    state.specialities = specialities;\n  },\n  SET_SPECIALITIES_TOTAL(state, specialitiesTotal) {\n    state.specialitiesTotal = specialitiesTotal;\n  },\n  SET_SPECIALITY(state, speciality) {\n    state.speciality = speciality;\n  },\n  SET_SPECIALITY_NAME(state, specialityName) {\n    state.specialityName = specialityName;\n  }\n};\nexport const actions = {\n  fetchSpecialities({\n    commit\n  } //  { perPage, page }\n  ) {\n    SpecialityService.getSpecialities().then(response => {\n      commit(\"SET_SPECIALITIES_TOTAL\", parseInt(response.headers[\"x-total-count\"]));\n      commit(\"SET_SPECIALITIES\", response.data);\n    }).catch(error => {\n      console.log(\"There was an error:\", error.response);\n    });\n  },\n  fetchSpeciality({\n    commit,\n    getters\n  }, id) {\n    var event = getters.getSpecialityById(id);\n    if (event) {\n      commit(\"SET_EVENT\", event);\n    } else {\n      SpecialityService.getEvent(id).then(response => {\n        commit(\"SET_SPECIALITY\", response.data);\n      }).catch(error => {\n        console.log(\"There was an error:\", error.response);\n      });\n    }\n  },\n  setSpecialityName({\n    commit\n  }, name) {\n    commit(\"SET_SPECIALITY_NAME\", name);\n  }\n};\nexport const getters = {\n  getSpecialityById: state => id => {\n    return state.specialities.find(speciality => speciality.id === id);\n  }\n};","map":{"version":3,"names":["SpecialityService","namespaced","state","specialities","specialitiesTotal","speciality","specialityName","mutations","SET_SPECIALITIES","SET_SPECIALITIES_TOTAL","SET_SPECIALITY","SET_SPECIALITY_NAME","actions","fetchSpecialities","commit","getSpecialities","then","response","parseInt","headers","data","catch","error","console","log","fetchSpeciality","getters","id","event","getSpecialityById","getEvent","setSpecialityName","name","find"],"sources":["/Users/you/Desktop/work_dev/inso-frontend-master/src/store/modules/speciality.js"],"sourcesContent":["import SpecialityService from \"@/services/SpecialityService\";\r\n\r\nexport const namespaced = true;\r\n\r\nexport const state = {\r\n  specialities: [],\r\n  specialitiesTotal: 0,\r\n  speciality: {},\r\n  specialityName:\"\",\r\n};\r\n\r\nexport const mutations = {\r\n  SET_SPECIALITIES(state, specialities) {\r\n    state.specialities = specialities;\r\n  },\r\n  SET_SPECIALITIES_TOTAL(state, specialitiesTotal) {\r\n    state.specialitiesTotal = specialitiesTotal;\r\n  },\r\n  SET_SPECIALITY(state, speciality) {\r\n    state.speciality = speciality;\r\n  },\r\n  SET_SPECIALITY_NAME(state, specialityName) {\r\n    state.specialityName = specialityName;\r\n  },\r\n};\r\n\r\nexport const actions = {\r\n  fetchSpecialities(\r\n    { commit } //  { perPage, page }\r\n  ) {\r\n    SpecialityService\r\n      .getSpecialities\r\n      ()\r\n      .then((response) => {\r\n        commit(\r\n          \"SET_SPECIALITIES_TOTAL\",\r\n          parseInt(response.headers[\"x-total-count\"])\r\n        );\r\n        commit(\"SET_SPECIALITIES\", response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"There was an error:\", error.response);\r\n      });\r\n  },\r\n  fetchSpeciality({ commit, getters }, id) {\r\n    var event = getters.getSpecialityById(id);\r\n\r\n    if (event) {\r\n      commit(\"SET_EVENT\", event);\r\n    } else {\r\n      SpecialityService.getEvent(id)\r\n        .then((response) => {\r\n          commit(\"SET_SPECIALITY\", response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"There was an error:\", error.response);\r\n        });\r\n    }\r\n  },\r\n  setSpecialityName({ commit }, name) {\r\n    commit(\"SET_SPECIALITY_NAME\", name);\r\n  },\r\n};\r\nexport const getters = {\r\n  getSpecialityById: (state) => (id) => {\r\n    return state.specialities.find((speciality) => speciality.id === id);\r\n  },\r\n};\r\n"],"mappings":"AAAA,OAAOA,iBAAiB,MAAM,8BAA8B;AAE5D,OAAO,MAAMC,UAAU,GAAG,IAAI;AAE9B,OAAO,MAAMC,KAAK,GAAG;EACnBC,YAAY,EAAE,EAAE;EAChBC,iBAAiB,EAAE,CAAC;EACpBC,UAAU,EAAE,CAAC,CAAC;EACdC,cAAc,EAAC;AACjB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG;EACvBC,gBAAgB,CAACN,KAAK,EAAEC,YAAY,EAAE;IACpCD,KAAK,CAACC,YAAY,GAAGA,YAAY;EACnC,CAAC;EACDM,sBAAsB,CAACP,KAAK,EAAEE,iBAAiB,EAAE;IAC/CF,KAAK,CAACE,iBAAiB,GAAGA,iBAAiB;EAC7C,CAAC;EACDM,cAAc,CAACR,KAAK,EAAEG,UAAU,EAAE;IAChCH,KAAK,CAACG,UAAU,GAAGA,UAAU;EAC/B,CAAC;EACDM,mBAAmB,CAACT,KAAK,EAAEI,cAAc,EAAE;IACzCJ,KAAK,CAACI,cAAc,GAAGA,cAAc;EACvC;AACF,CAAC;AAED,OAAO,MAAMM,OAAO,GAAG;EACrBC,iBAAiB,CACf;IAAEC;EAAO,CAAC,CAAC;EAAA,EACX;IACAd,iBAAiB,CACde,eAAe,EACd,CACDC,IAAI,CAAEC,QAAQ,IAAK;MAClBH,MAAM,CACJ,wBAAwB,EACxBI,QAAQ,CAACD,QAAQ,CAACE,OAAO,CAAC,eAAe,CAAC,CAAC,CAC5C;MACDL,MAAM,CAAC,kBAAkB,EAAEG,QAAQ,CAACG,IAAI,CAAC;IAC3C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,KAAK,CAACL,QAAQ,CAAC;IACpD,CAAC,CAAC;EACN,CAAC;EACDQ,eAAe,CAAC;IAAEX,MAAM;IAAEY;EAAQ,CAAC,EAAEC,EAAE,EAAE;IACvC,IAAIC,KAAK,GAAGF,OAAO,CAACG,iBAAiB,CAACF,EAAE,CAAC;IAEzC,IAAIC,KAAK,EAAE;MACTd,MAAM,CAAC,WAAW,EAAEc,KAAK,CAAC;IAC5B,CAAC,MAAM;MACL5B,iBAAiB,CAAC8B,QAAQ,CAACH,EAAE,CAAC,CAC3BX,IAAI,CAAEC,QAAQ,IAAK;QAClBH,MAAM,CAAC,gBAAgB,EAAEG,QAAQ,CAACG,IAAI,CAAC;MACzC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,KAAK,CAACL,QAAQ,CAAC;MACpD,CAAC,CAAC;IACN;EACF,CAAC;EACDc,iBAAiB,CAAC;IAAEjB;EAAO,CAAC,EAAEkB,IAAI,EAAE;IAClClB,MAAM,CAAC,qBAAqB,EAAEkB,IAAI,CAAC;EACrC;AACF,CAAC;AACD,OAAO,MAAMN,OAAO,GAAG;EACrBG,iBAAiB,EAAG3B,KAAK,IAAMyB,EAAE,IAAK;IACpC,OAAOzB,KAAK,CAACC,YAAY,CAAC8B,IAAI,CAAE5B,UAAU,IAAKA,UAAU,CAACsB,EAAE,KAAKA,EAAE,CAAC;EACtE;AACF,CAAC"},"metadata":{},"sourceType":"module"}