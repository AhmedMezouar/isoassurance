{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport HotelService from \"@/services/HotelService\";\nexport const namespaced = true;\nexport const state = {\n  hotels: [],\n  markers: [],\n  hotelsTotal: 0,\n  hotel: {},\n  wilaya: \"\",\n  country: \"\",\n  name: \"\",\n  lat: 0,\n  long: 0,\n  service: \"hotel\",\n  url: \"/api/hotel/filter\"\n};\nexport const mutations = {\n  SET_HOTELS(state, hotels) {\n    state.hotels.push(...hotels);\n  },\n  SET_HOSPITALS_TOTAL(state, hotelsTotal) {\n    state.hotelsTotal = hotelsTotal;\n  },\n  RESSET_HOTELS(state, params) {\n    const {\n      name\n    } = params;\n    if (name == state.name) state.hotels = [];\n  },\n  SET_NAME(state, params) {\n    const {\n      name\n    } = params;\n    state.name = name;\n  },\n  SET_HOTEL(state, hotel) {\n    state.hotel = hotel;\n  },\n  SET_CORDINATES(state, lat, long) {\n    state.lat = lat;\n    state.long = long;\n  },\n  SET_COUNTRY(state, country) {\n    if (country != state.country) {\n      state.hotels = [];\n    }\n    state.country = country;\n  },\n  SET_WILAYA(state, wilaya) {\n    if (wilaya != state.wilaya) {\n      state.hotels = [];\n    }\n    state.wilaya = wilaya;\n  },\n  SET_MARKERS(state, markers) {\n    state.markers = markers;\n  }\n};\nexport const actions = {\n  fetchHotel({\n    commit\n  }, params) {\n    console.log(\"hmida\");\n    const {\n      nextPage,\n      ...data\n    } = params;\n    HotelService.getAll(state.url, nextPage, data).then(response => {\n      commit(\"SET_HOTEL_TOTAL\", parseInt(response.headers[\"x-total-count\"]));\n      commit(\"SET_NAME\", params);\n      commit(\"RESSET_HOTEL\", params);\n      commit(\"SET_HOTELS\", response.data.data);\n    }).catch(error => {\n      console.log(\"There was an error:\");\n      console.log(error);\n    });\n  },\n  setCordinates({\n    commit\n  }, lat, long = 0) {\n    commit(\"SET_CORDINATES\", lat, long);\n  },\n  setWilaya({\n    commit\n  }, wilaya) {\n    commit(\"SET_WILAYA\", wilaya);\n  },\n  setCountry({\n    commit\n  }, country) {\n    commit(\"SET_COUNTRY\", country);\n  },\n  setMarkers({\n    commit\n  }, markers) {\n    commit(\"SET_MARKERS\", markers);\n  },\n  getMarkers({\n    commit\n  }) {\n    const markers = [];\n    if (state.hotels.length != 0) {\n      state.hotels.forEach((hotel, index) => {\n        if (hotel.latitude) {\n          markers[index] = {\n            lat: parseFloat(hotel.latitude),\n            lng: parseFloat(hotel.longitude),\n            address: hotel.address,\n            address_url: hotel.address_url,\n            address_displayed: hotel.address_displayed\n          };\n        }\n      });\n      commit(\"SET_MARKERS\", markers);\n    } else {\n      commit(\"SET_MARKERS\", markers);\n    }\n  }\n};\nexport const getters = {};","map":{"version":3,"names":["HotelService","namespaced","state","hotels","markers","hotelsTotal","hotel","wilaya","country","name","lat","long","service","url","mutations","SET_HOTELS","push","SET_HOSPITALS_TOTAL","RESSET_HOTELS","params","SET_NAME","SET_HOTEL","SET_CORDINATES","SET_COUNTRY","SET_WILAYA","SET_MARKERS","actions","fetchHotel","commit","console","log","nextPage","data","getAll","then","response","parseInt","headers","catch","error","setCordinates","setWilaya","setCountry","setMarkers","getMarkers","length","forEach","index","latitude","parseFloat","lng","longitude","address","address_url","address_displayed","getters"],"sources":["/Users/you/Desktop/work_dev/inso-frontend-master/src/store/modules/hotel.js"],"sourcesContent":["import HotelService from \"@/services/HotelService\";\n\nexport const namespaced = true;\n\nexport const state = {\n  hotels: [],\n  markers: [],\n  hotelsTotal: 0,\n  hotel: {},\n  wilaya: \"\",\n  country: \"\",\n  name: \"\",\n  lat: 0,\n  long: 0,\n  service:\"hotel\",\n  url: \"/api/hotel/filter\",\n};\n\nexport const mutations = {\n  SET_HOTELS(state, hotels) {\n    state.hotels.push(...hotels);\n  },\n  SET_HOSPITALS_TOTAL(state, hotelsTotal) {\n    state.hotelsTotal = hotelsTotal;\n  },\n  RESSET_HOTELS(state, params) {\n    const { name } = params;\n    if (name == state.name) state.hotels = [];\n  },\n  SET_NAME(state, params) {\n    const { name } = params;\n    state.name = name;\n  },\n  SET_HOTEL(state, hotel) {\n    state.hotel = hotel;\n  },\n  SET_CORDINATES(state, lat, long) {\n    state.lat = lat;\n    state.long = long;\n  },\n  SET_COUNTRY(state, country) {\n    if (country != state.country) {\n      state.hotels = [];\n    }\n    state.country = country;\n  },\n  SET_WILAYA(state, wilaya) {\n    if (wilaya != state.wilaya) {\n      state.hotels = [];\n    }\n    state.wilaya = wilaya;\n  },\n  SET_MARKERS(state, markers) {\n    state.markers = markers;\n  },\n};\n\nexport const actions = {\n  fetchHotel({ commit }, params) {\n    console.log(\"hmida\")\n    const { nextPage, ...data } = params;\n    HotelService.getAll(state.url, nextPage, data)\n      .then((response) => {\n        commit(\n          \"SET_HOTEL_TOTAL\",\n          parseInt(response.headers[\"x-total-count\"])\n        );\n        commit(\"SET_NAME\", params);\n        commit(\"RESSET_HOTEL\", params);\n        commit(\"SET_HOTELS\", response.data.data);\n      })\n      .catch((error) => {\n        console.log(\"There was an error:\");\n        console.log(error);\n      });\n  },\n  setCordinates({ commit }, lat, long=0) {\n    commit(\"SET_CORDINATES\", lat, long);\n  },\n  setWilaya({ commit }, wilaya) {\n    commit(\"SET_WILAYA\", wilaya);\n  },\n  setCountry({ commit }, country) {\n    commit(\"SET_COUNTRY\", country);\n  },\n  setMarkers({ commit }, markers) {\n    commit(\"SET_MARKERS\", markers);\n  },\n  getMarkers({ commit }) {\n    const markers = [];\n    if (state.hotels.length != 0) {\n      state.hotels.forEach((hotel, index) => {\n        if (hotel.latitude) {\n          markers[index] = {\n            lat: parseFloat(hotel.latitude),\n            lng: parseFloat(hotel.longitude),\n            address: hotel.address,\n            address_url: hotel.address_url,\n            address_displayed: hotel.address_displayed,\n          };\n        }\n      });\n\n      commit(\"SET_MARKERS\", markers);\n    } else {\n      commit(\"SET_MARKERS\", markers);\n    }\n  },\n};\nexport const getters = {};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}