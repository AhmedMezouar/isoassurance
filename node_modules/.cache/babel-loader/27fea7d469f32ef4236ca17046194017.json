{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CatalogueService from \"@/services/CatalogueService\";\nexport const namespaced = true;\nexport const state = {\n  hospitals: [],\n  markers: [],\n  hospitalsTotal: 0,\n  hospital: {},\n  wilaya: \"\",\n  country: \"\",\n  name: \"\",\n  lat: 0,\n  long: 0,\n  url: \"/api/hospital/filter\",\n  lastpage: 1\n};\nexport const mutations = {\n  SET_HOSPITALS(state, hospitals) {\n    state.hospitals.push(...hospitals);\n  },\n  SET_HOSPITALS_TOTAL(state, hospitalsTotal) {\n    state.hospitalsTotal = hospitalsTotal;\n  },\n  RESSET_HOSPITALS(state, params) {\n    const {\n      name\n    } = params;\n    if (name == state.name) state.hospitals = [];\n  },\n  SET_NAME(state, params) {\n    const {\n      name\n    } = params;\n    state.name = name;\n  },\n  SET_LASTPAGE(state, params) {\n    const {\n      name\n    } = params;\n    state.name = name;\n  },\n  SET_HOSPITAL(state, hospital) {\n    state.hospital = hospital;\n  },\n  SET_CORDINATES(state, lat, longgg = 0) {\n    state.lat = lat;\n    state.long = longgg;\n  },\n  SET_COUNTRY(state, country) {\n    if (country != state.country) {\n      state.hospitals = [];\n    }\n    state.country = country;\n  },\n  SET_WILAYA(state, wilaya) {\n    if (wilaya != state.wilaya) {\n      state.hospitals = [];\n    }\n    state.wilaya = wilaya;\n  },\n  SET_MARKERS(state, markers) {\n    state.markers = markers;\n  }\n};\nexport const actions = {\n  fetchHospitals({\n    commit\n  }, params) {\n    const {\n      nextPage,\n      ...data\n    } = params;\n    CatalogueService.filterByParams(nextPage, data).then(response => {\n      commit('SET_LASTPAGE', parseInt(response.data.last_page));\n      commit(\"SET_HOSPITALS_TOTAL\", parseInt(response.headers[\"x-total-count\"]));\n      commit(\"SET_NAME\", params);\n      commit(\"RESSET_HOSPITALS\", params);\n      commit(\"SET_HOSPITALS\", response.data.data);\n    }).catch(error => {\n      console.log(\"There was an error:\");\n      console.log(error);\n    });\n  },\n  setCordinates({\n    commit\n  }, lat, longgg = 0) {\n    commit(\"SET_CORDINATES\", lat, longgg);\n  },\n  setWilaya({\n    commit\n  }, wilaya) {\n    commit(\"SET_WILAYA\", wilaya);\n  },\n  setCountry({\n    commit\n  }, country) {\n    commit(\"SET_COUNTRY\", country);\n  },\n  setMarkers({\n    commit\n  }, markers) {\n    commit(\"SET_MARKERS\", markers);\n  },\n  getMarkers({\n    commit\n  }) {\n    const markers = [];\n    if (state.hospitals.length != 0) {\n      state.hospitals.forEach((hospital, index) => {\n        if (hospital.latitude) {\n          markers[index] = {\n            lat: parseFloat(hospital.latitude),\n            lng: parseFloat(hospital.longitude),\n            address: hospital.address,\n            address_url: hospital.address_url,\n            address_displayed: hospital.address_displayed,\n            conv: hospital.convention\n          };\n        }\n      });\n      commit(\"SET_MARKERS\", markers);\n    } else {\n      commit(\"SET_MARKERS\", markers);\n    }\n  }\n};\nexport const getters = {\n  getLASTPAGE(state) {\n    return state.lastpage;\n  }\n};","map":{"version":3,"names":["CatalogueService","namespaced","state","hospitals","markers","hospitalsTotal","hospital","wilaya","country","name","lat","long","url","lastpage","mutations","SET_HOSPITALS","push","SET_HOSPITALS_TOTAL","RESSET_HOSPITALS","params","SET_NAME","SET_LASTPAGE","SET_HOSPITAL","SET_CORDINATES","longgg","SET_COUNTRY","SET_WILAYA","SET_MARKERS","actions","fetchHospitals","commit","nextPage","data","filterByParams","then","response","parseInt","last_page","headers","catch","error","console","log","setCordinates","setWilaya","setCountry","setMarkers","getMarkers","length","forEach","index","latitude","parseFloat","lng","longitude","address","address_url","address_displayed","conv","convention","getters","getLASTPAGE"],"sources":["/Users/you/Desktop/work_dev/inso-frontend-master/src/store/modules/catalogue.js"],"sourcesContent":["import CatalogueService from \"@/services/CatalogueService\";\r\n\r\nexport const namespaced = true;\r\n\r\nexport const state = {\r\n  hospitals: [],\r\n  markers: [],\r\n  hospitalsTotal: 0,\r\n  hospital: {},\r\n  wilaya: \"\",\r\n  country: \"\",\r\n  name:\"\",\r\n  lat: 0,\r\n  long: 0,\r\n  url:\"/api/hospital/filter\",\r\n  lastpage:1\r\n};\r\n\r\nexport const mutations = {\r\n  SET_HOSPITALS(state, hospitals) {\r\n    state.hospitals.push(...hospitals);\r\n  },\r\n  SET_HOSPITALS_TOTAL(state, hospitalsTotal) {\r\n    state.hospitalsTotal = hospitalsTotal;\r\n  },\r\n  RESSET_HOSPITALS(state, params) {\r\n    const { name } = params;\r\n    if (name == state.name) state.hospitals = [];\r\n  },\r\n  SET_NAME(state, params) {\r\n    const { name } = params;\r\n    state.name = name;\r\n  },\r\n  SET_LASTPAGE(state, params) {\r\n    const { name } = params;\r\n    state.name = name;\r\n  },\r\n  SET_HOSPITAL(state, hospital) {\r\n    state.hospital = hospital;\r\n  },\r\n  SET_CORDINATES(state, lat, longgg=0) {\r\n    state.lat = lat;\r\n    state.long = longgg;\r\n  },\r\n  SET_COUNTRY(state, country) {\r\n    if (country != state.country) {\r\n      state.hospitals = [];\r\n    }\r\n    state.country = country;\r\n  },\r\n  SET_WILAYA(state, wilaya) {\r\n    if (wilaya != state.wilaya) {\r\n      state.hospitals = [];\r\n    }\r\n    state.wilaya = wilaya;\r\n  },\r\n  SET_MARKERS(state, markers) {\r\n    state.markers = markers;\r\n  },\r\n};\r\n\r\nexport const actions = {\r\n  fetchHospitals({ commit }, params) {\r\n    const { nextPage, ...data } = params;\r\n    CatalogueService.filterByParams(nextPage,data)\r\n      .then((response) => {\r\n        commit('SET_LASTPAGE',\r\n        parseInt(response.data.last_page)\r\n        )\r\n        commit(\r\n          \"SET_HOSPITALS_TOTAL\",\r\n          parseInt(response.headers[\"x-total-count\"])\r\n        );\r\n        commit(\"SET_NAME\", params);\r\n        commit(\"RESSET_HOSPITALS\", params);\r\n        commit(\"SET_HOSPITALS\", response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"There was an error:\");\r\n        console.log(error)\r\n      });\r\n  },\r\n  setCordinates({ commit }, lat, longgg=0) {\r\n    commit(\"SET_CORDINATES\", lat, longgg);\r\n  },\r\n  setWilaya({ commit }, wilaya) {\r\n    commit(\"SET_WILAYA\", wilaya);\r\n  },\r\n  setCountry({ commit }, country) {\r\n    commit(\"SET_COUNTRY\", country);\r\n  },\r\n  setMarkers({ commit }, markers) {\r\n    commit(\"SET_MARKERS\", markers);\r\n  },\r\n  getMarkers({ commit }) {\r\n    const markers = [];\r\n    if (state.hospitals.length != 0) {\r\n      state.hospitals.forEach((hospital, index) => {\r\n        if (hospital.latitude) {\r\n          markers[index] = {\r\n            lat: parseFloat(hospital.latitude),\r\n            lng: parseFloat(hospital.longitude),\r\n            address: hospital.address,\r\n            address_url: hospital.address_url,\r\n            address_displayed: hospital.address_displayed,\r\n            conv:hospital.convention,\r\n          };\r\n        }\r\n      });\r\n      commit(\"SET_MARKERS\", markers);\r\n    } else {\r\n      commit(\"SET_MARKERS\", markers);\r\n    }\r\n  },\r\n};\r\nexport const getters = {\r\n  getLASTPAGE (state) {\r\n    return state.lastpage\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}