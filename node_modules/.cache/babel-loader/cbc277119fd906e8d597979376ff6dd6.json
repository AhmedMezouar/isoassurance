{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { fetchHospitalsByParams, fetchUnivs, SetCountry, SetWilaya, getHospitalMarkers, setCenter, leave_marker, mark_marker } from \"../../composable/index\";\nimport { mapMutations } from \"vuex\";\nexport default {\n  components: {},\n  data() {\n    return {\n      search: false,\n      focust: false,\n      typeData: \"map\",\n      lat: \"\",\n      long: \"\",\n      nextPage: 1,\n      hospitals: [],\n      markers: [],\n      moreExists: false,\n      country: \"Turc\",\n      wilaya: [],\n      countries: [{\n        word: \"Turc\",\n        fr: \"Turquie\",\n        en: \"Turkey\",\n        ar: \"تركيا\",\n        tu: \"Turc\",\n        lat: 40.945711799603615,\n        long: 29.21994356201801,\n        flag: \"inso-pics/tu.png\"\n      }],\n      dropd1: false,\n      dropd2: false,\n      destination: {},\n      path: [],\n      flightPath: null,\n      infoWindowPos: null,\n      infoContent: null,\n      currentMidx: null,\n      infoWinOpen: false,\n      closeModal: false,\n      filter: false\n    };\n  },\n  computed: {\n    getCenter: {\n      get() {\n        return {\n          lat: this.$store.state.map.lat,\n          lng: this.$store.state.map.long\n        };\n      },\n      set() {\n        this.markers.push({\n          lat: this.$store.state.map.lat,\n          lng: this.$store.state.map.long\n        });\n      }\n    },\n    getFlightPath: {\n      get() {\n        return this.flightPath;\n      },\n      set(value) {\n        this.flightPath = value;\n      }\n    },\n    getMarkers() {\n      this.getHospitals;\n      getHospitalMarkers(this.$store, \"univ\");\n      return this.$store.state.univ.markers;\n    },\n    getHospitals() {\n      return this.$store.state.univ.hospitals;\n    },\n    getSpecialityName() {\n      return this.$store.state.speciality.specialityName;\n    },\n    getSpecialities() {\n      return this.$store.state.speciality.specialities;\n    },\n    tillOpnned() {\n      return this.closeModal;\n    }\n  },\n  methods: {\n    hoverMarker(index) {\n      mark_marker(index);\n    },\n    leaveMarker(index) {\n      leave_marker(index);\n    },\n    toggleInfoWindow: function (marker, idx) {\n      this.infoWindowPos = marker;\n      if (this.infoWindowPos) {\n        this.infoWinOpen = !this.infoWinOpen;\n        this.currentMidx = idx;\n        this.closeModal = false;\n      }\n    },\n    closeit() {\n      this.$refs.searchtxt.value = null;\n      this.focust = false;\n      this.hideSearch();\n    },\n    showSearch() {\n      this.search = true;\n    },\n    hideSearch() {\n      !this.focust ? this.search = false : this.search;\n    },\n    fct() {\n      this.showSearch();\n      this.focust = true;\n    },\n    openSelected: function (index) {\n      if (index == this.currentMidx) {\n        if (!this.closeModal) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n      return false;\n    },\n    close: function () {\n      this.closeModal = true;\n    },\n    ...mapMutations([\"SET_showModal\",\n    // map `this.increment()` to `this.$store.commit('increment')`\n\n    // `mapMutations` also supports payloads:\n    \"SET_typeModal\" // map `this.incrementBy(amount)` to `this.$store.commit('incrementBy', amount)`\n    ]),\n\n    showInsoModal(e) {\n      if (typeof e != \"undefined\") {\n        if (!e.includes('https://') && !e.includes('http://')) {\n          e = 'https://' + e;\n        }\n        window.open(e);\n      }\n      //this.$store.commit(\"SET_typeModal\", { index, typeModal: \"hospital\" });\n    },\n\n    getCountryWilaya() {\n      //this.countries = this.$store.getters.getCountries;\n      if (this.country != \"country\") {\n        this.wilaya = this.$store.getters.getCountryById(this.country).wilaya;\n      }\n    },\n    changeMyCountry(key) {\n      this.dropd2 = false;\n      this.dropd1 = false;\n      if (key != \"country\") {\n        this.country = key;\n        this.getCountryWilaya();\n        SetCountry(this.$store, this.country, this.nextPage);\n        const {\n          lat,\n          long\n        } = this.$store.getters.getCountryById(this.country).name;\n        setCenter(this.$store, lat, long);\n        this.getHospitals;\n        this.getMark;\n      }\n    },\n    changeCountry(event) {\n      this.dropd2 = false;\n      this.dropd1 = false;\n      const country = event.target.value;\n      this.country = country;\n      this.getCountryWilaya();\n      SetCountry(this.$store, country, this.nextPage);\n      const {\n        lat,\n        long\n      } = this.$store.getters.getCountryById(this.country).name;\n      setCenter(this.$store, lat, long);\n      this.getHospitals;\n      this.getMarkers;\n    },\n    changeWilaya(event) {\n      const wilaya = event.target.value;\n      SetWilaya(this.$store, wilaya, this.nextPage);\n      fetchUnivs(this.$store, wilaya);\n      this.getHospitals;\n      this.getMarkers;\n      const {\n        lat,\n        long\n      } = this.$store.getters.getWilayaById(this.country, wilaya);\n      setCenter(this.$store, lat, long);\n    },\n    WhatToShow() {\n      this.showAll = !this.showAll;\n    },\n    getRestrictedHospital(speciaName) {\n      fetchHospitalsByParams(this.$store, this.nextPage, speciaName);\n    },\n    handleInput(e) {\n      let speciaName = e.target.value;\n      fetchHospitalsByParams(this.$store, this.nextPage, speciaName);\n    },\n    getLocation(closure) {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          this.long = position.coords.longitude;\n          this.lat = position.coords.latitude;\n          this.locationErrorMessage = \"\";\n          setCenter(this.$store, position.coords.latitude, position.coords.longitude);\n          /*  localStorage.setItem(\"storedData\", {\n              long: position.coords.longitude,\n              lat: position.coords.latitude,\n            });*/\n          closure();\n        }, error => {\n          if (error.code === 1) {\n            this.locationErrorMessage = \"Please allow location access.\";\n          }\n        });\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\");\n      }\n      /*}*/\n    },\n\n    loadMore() {\n      try {\n        this.nextPage++;\n        fetchUnivs(this.$store, this.nextPage, this.long, this.lat, this.getSpecialityName);\n        this.moreExists = true;\n      } catch (error) {\n        this.moreExists = false;\n      }\n    },\n    mark(event) {\n      this.destination = {\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng()\n      };\n      this.drawDirection();\n    },\n    drawDirection() {\n      this.path = [this.getCenter, this.destination];\n      this.filePath = {\n        path: [this.getCenter, this.destination],\n        geodesic: false,\n        strokeColor: \"#22c7e5\",\n        strokeOpacity: 1.0,\n        strokeWeight: 2\n      };\n      this.getFlightPath = this.filePath;\n    },\n    openInfoWindowTemplate(position) {\n      const {\n        lat,\n        lng,\n        address\n      } = position;\n      this.infoWindow.position = {\n        lat: lat,\n        lng: lng\n      };\n      this.infoWindow.template = `<b>${address}</b>`;\n      this.infoWindow.isFractionalZoomEnabled = true;\n      this.infoWindow.open = true;\n    }\n  },\n  created() {\n    setCenter(this.$store, 41.015137, 28.979530);\n    this.getCountryWilaya();\n    fetchUnivs(this.$store, \"istanbul\");\n  }\n};","map":{"version":3,"mappings":"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","names":["fetchHospitalsByParams","fetchUnivs","SetCountry","SetWilaya","getHospitalMarkers","setCenter","leave_marker","mark_marker","mapMutations","components","data","search","focust","typeData","lat","long","nextPage","hospitals","markers","moreExists","country","wilaya","countries","word","fr","en","ar","tu","flag","dropd1","dropd2","destination","path","flightPath","infoWindowPos","infoContent","currentMidx","infoWinOpen","closeModal","filter","computed","getCenter","get","$store","state","map","lng","set","push","getFlightPath","value","getMarkers","getHospitals","univ","getSpecialityName","speciality","specialityName","getSpecialities","specialities","tillOpnned","methods","hoverMarker","index","leaveMarker","toggleInfoWindow","marker","idx","closeit","$refs","searchtxt","hideSearch","showSearch","fct","openSelected","close","showInsoModal","e","includes","window","open","getCountryWilaya","getters","getCountryById","changeMyCountry","key","name","getMark","changeCountry","event","target","changeWilaya","getWilayaById","WhatToShow","showAll","getRestrictedHospital","speciaName","handleInput","getLocation","closure","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","locationErrorMessage","error","code","console","log","loadMore","mark","latLng","drawDirection","filePath","geodesic","strokeColor","strokeOpacity","strokeWeight","openInfoWindowTemplate","address","infoWindow","template","isFractionalZoomEnabled","created"],"sourceRoot":"","sources":["/Users/you/Desktop/work_dev/inso-frontend-master/src/components/newinterface/UnivindexComponent.vue"],"sourcesContent":["\n<template>\n  <!-- Ambulance-->\n  <div id=\"clinique-tablette\" class=\"clin d-flex justify-content-center\" >\n    <div id=\"clinique--2\" style=\"overflow: hidden;\">\n      <div class=\"row\">\n        <!-- FILTRAGE -->\n        <div class=\"col-12\">\n          <h3 class=\"phone-title-haut\">\n            <img src=\"/inso-pics/tu.png\"\n              style=\"border-radius: 100%;display: inline;width: 30px;\" alt=\"\">\n              {{ $store.getters.getT(\"university\") }}\n          </h3>  \n        </div>\n        <div class=\"col-12\">\n                <div class=\"card card-special\">\n                  <div class=\"card-body\">\n                    <div class=\"row\" style=\"font-size: 12px; position: relative;\">\n                      <div class=\" col-12 mb-2\">\n                        <input type=\"text\" class=\"btnData contr search form-control\" placeholder=\"Rechercher ...\"\n                        @keyup.stop=\"handleInput($event); gotores($event)\"\n                        @click=\"fct()\" name=\"search\" id=\"search\" ref=\"searchtxt\" >                      \n                      </div>\n                      <div class=\"col-6 mb-2\">\n                          <div @click=\"\n                          dropd1 = !dropd1;\n                        dropd2 = false;\n                        \" class=\"\">\n                          <button class=\"form-select select-speciale\">\n                            <span v-show=\"country === ''\">\n                              {{ $store.getters.getT(\"country\") }}\n                            </span>\n                            <div v-show=\"cc.word === country\" v-for=\"cc in countries\" :key=\"cc\"\n                              @click=\"changeMyCountry(cc.word)\" class=\"flex items-center cursor-pointer\">\n                              <span v-show=\"$store.getters.getL === 'en'\">{{\n                                cc.en\n                              }}</span>\n                              <span v-show=\"$store.getters.getL === 'fr'\">{{\n                                cc.fr\n                              }}</span>\n                              <span v-show=\"$store.getters.getL === 'ar'\">{{\n                                cc.ar\n                              }}</span>\n                              <span v-show=\"$store.getters.getL === 'tu'\">{{\n                                cc.tu\n                              }}</span>\n                            </div>\n                          </button>                        </div>\n                        <ul v-show=\"dropd1\" class=\"absolute p-2 bg-white shadow-sm z-20 list-pays\">\n                          \n\n                          <li v-for=\"(cc, index) in countries\" :key=\"cc\" @click=\"changeMyCountry(cc.word, index)\"\n                            class=\"li-pays\">\n                            <span v-show=\"$store.getters.getL === 'en'\">{{ cc.en }}</span>\n                            <span v-show=\"$store.getters.getL === 'fr'\">{{ cc.fr }}</span>\n                            <span v-show=\"$store.getters.getL === 'ar'\">{{ cc.ar }}</span>\n                            <span v-show=\"$store.getters.getL === 'tu'\">{{ cc.tu }}</span>\n                          </li>\n                        </ul>\n                      </div>\n                      <!--<div class=\" col-6\" >\n                          <div @click=\"\n                          dropd1 = !dropd1;\n                        dropd2 = false;\n                        \" class=\"absolute right-2 h-full top-0 items-center justify-center px-3 flex z-0 cursor-pointer\">\n                          \n                        </div>\n                          <ul v-show=\"dropd1\" class=\"absolute p-2 bg-white shadow-sm z-20 w-full\">\n                          <li style=\"cursor: not-allowed !important\" class=\"flex py-2\" @click=\"changeMyCountry('country')\">\n                            {{ $store.getters.getT(\"country\") }}\n                          </li>\n\n                          <li v-for=\"(cc, index) in countries\" :key=\"cc\" @click=\"changeMyCountry(cc.word, index)\"\n                            class=\"flex py-2 items-center cursor-pointer\">\n                            <img :src=\"'/' + cc.flag\" class=\"mr-2\" width=\"15\" />\n                            <span v-show=\"$store.getters.getL === 'en'\">{{ cc.en }}</span>\n                            <span v-show=\"$store.getters.getL === 'fr'\">{{ cc.fr }}</span>\n                            <span v-show=\"$store.getters.getL === 'ar'\">{{ cc.ar }}</span>\n                            <span v-show=\"$store.getters.getL === 'tu'\">{{ cc.tu }}</span>\n                          </li>\n                        </ul>\n                      </div>  -->\n\n                      <div class=\" col-6\">\n                        <select name=\"wilaya\" class=\"form-select select-speciale\" :class=\"[country != 'country' ? 'choosedData' : '']\" aria-label=\"Default select example\"\n                        @change=\"changeWilaya($event)\" \n                        >\n                          <option value=\"\" selected disabled>{{ $store.getters.getT(\"wilaya\") }}</option>\n                          <option v-for=\"cc, in wilaya\" :key=\"cc\" :value=\"cc.value\">\n                            <span v-if=\"$store.getters.getL === 'ar'\">{{\n                              cc.ar_name\n                            }}</span>\n                            <span v-else>{{ cc.fr_name }}</span>\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n        </div>\n        <!-- FIN-FILTRAGE --> \n      </div>\n      <div id=\"mylist\" class=\"monbf\">\n          <div class=\"phoneIcnns2\"> \n            <div class=\"row d-flex justify-content-center\">\n              <!-- HOPITAL --> \n              <div class=\"col-12\" v-for=\"(hospital, index) in getHospitals\" :key=\"index\" @mouseover=\"hoverMarker(index)\" @mouseleave=\"leaveMarker(index)\">\n                <div class=\"card card-special\">\n                  <div class=\"card-body\">\n                    <img id=\"hotel-mobile\" :src=\"hospital.image.length > 0 ? 'https://admin-assurance-private.assuranceiso.com/web/images/' + hospital.image : '/inso-pics/Myplaceholder.jpg'\" alt=\"\" > \n                                       \n                    <span class=\"name-hopital\">{{ hospital.name }}</span><br>\n                    <span class=\"desc-hopital\">\n                      {{hospital.country?hospital.country:''}}\n                      {{ hospital.country && hospital.wilaya?'-':'' }}\n                      {{hospital.wilaya?hospital.wilaya:''}}  \n                    </span><br>\n                    <span class=\"km-hopital\" ><img src=\"/inso-pics/location-svgrepo-com.png\" alt=\"\"> \n                      {{ distance }} km 2,564.58 km\n                    </span>\n                    <div class=\"row mx-auto justify-content-center icon-hopital mt-4\">\n                      \n                      \n                      <div class=\"col-12\" @click=\"gotolinks(hospital.link, index)\" style=\"margin-top: -30px;\">\n                        <span>S'avoir plus</span>      \n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <!-- HOPITAL --> \n              \n            </div>\n            \n          </div>\n      </div>\n    </div>\n  </div>\n</template>\n  \n  <style scoped>\n  \n  </style>\n  <script>\nimport {\n  fetchHospitalsByParams,\n  fetchUnivs,\n  SetCountry,\n  SetWilaya,\n  getHospitalMarkers,\n  setCenter,leave_marker,mark_marker\n} from \"../../composable/index\";\nimport { mapMutations } from \"vuex\";\nexport default {\n  components: { \n  },\n  data() {\n    return {\n      search:false,\n      focust:false,\n      typeData: \"map\",\n      lat: \"\",\n      long: \"\",\n      nextPage: 1,\n      hospitals: [],\n      markers: [],\n      moreExists: false,\n      country: \"Turc\",\n      wilaya: [],\n      countries: [\n        {\n        word:\"Turc\",\n        fr: \"Turquie\",\n        en: \"Turkey\",\n        ar: \"تركيا\",\n        tu: \"Turc\",\n        lat: 40.945711799603615,\n        long: 29.21994356201801,\n        flag: \"inso-pics/tu.png\",\n        }\n      ],\n      dropd1: false,\n      dropd2: false,\n      destination: {},\n      path: [],\n      flightPath: null,\n      infoWindowPos:null,\n      infoContent:null,\n      currentMidx:null,\n      infoWinOpen:false,\n      closeModal:false,\n      filter:false,\n    };\n  },\n  computed: {\n    getCenter: {\n      get() {\n        return {\n          lat: this.$store.state.map.lat,\n          lng: this.$store.state.map.long,\n        };\n      },\n      set() {\n        this.markers.push({\n          lat: this.$store.state.map.lat,\n          lng: this.$store.state.map.long,\n        });\n      },\n    },\n    getFlightPath:{\n      get() {\n          return this.flightPath\n      },\n      set(value) {\n        this.flightPath=value\n      },\n    },\n    getMarkers() {\n      this.getHospitals;\n      getHospitalMarkers(this.$store,\"univ\");\n      return this.$store.state.univ.markers;\n    },\n    getHospitals() {\n      return this.$store.state.univ.hospitals;\n    },\n    getSpecialityName() {\n      return this.$store.state.speciality.specialityName;\n    },\n    getSpecialities() {\n      return this.$store.state.speciality.specialities;\n    },\n    tillOpnned(){\n      return this.closeModal\n    },\n  },\n\n  methods: {\n    hoverMarker(index) {\n      mark_marker(index)\n    },\n    leaveMarker(index) {\n      leave_marker(index)\n    },\n     toggleInfoWindow: function (marker, idx) {\n\n        this.infoWindowPos = marker;\n       \n        if (this.infoWindowPos) {\n          this.infoWinOpen = !this.infoWinOpen;\n          this.currentMidx=idx;\n          this.closeModal=false;\n        }\n      },\n    closeit(){\n      this.$refs.searchtxt.value = null;\n      this.focust=false;\n      this.hideSearch()\n    },\n    showSearch(){\n        this.search=true\n    },\n    hideSearch(){\n        !this.focust?this.search=false:this.search\n    },\n    fct(){\n        this.showSearch()\n        this.focust=true\n    },\n    openSelected:function(index){\n      if(index==this.currentMidx){\n        if(!this.closeModal){\n          return true\n        }else{\n          return false;\n        }\n            \n      }\n        return false\n    },\n      close:function(){\n        this.closeModal=true;\n      },\n   \n    ...mapMutations([\n      \"SET_showModal\", // map `this.increment()` to `this.$store.commit('increment')`\n\n      // `mapMutations` also supports payloads:\n      \"SET_typeModal\", // map `this.incrementBy(amount)` to `this.$store.commit('incrementBy', amount)`\n    ]),\n    showInsoModal(e) {\n      if (typeof e != \"undefined\") {\n        if ((! e.includes('https://') )&& (! e.includes('http://'))) {\n          e='https://'+e\n        }\n        window.open(e);\n      }\n      //this.$store.commit(\"SET_typeModal\", { index, typeModal: \"hospital\" });\n    },\n    getCountryWilaya() {\n      //this.countries = this.$store.getters.getCountries;\n      if (this.country != \"country\") {\n        this.wilaya = this.$store.getters.getCountryById(this.country).wilaya;\n      }\n    },\n    changeMyCountry(key) {\n      this.dropd2 = false;\n      this.dropd1 = false;\n      if (key != \"country\") {\n        this.country = key;\n        this.getCountryWilaya();\n        SetCountry(this.$store, this.country, this.nextPage);\n        const { lat, long } = this.$store.getters.getCountryById(\n          this.country\n        ).name;\n\n        setCenter(this.$store, lat, long);\n        this.getHospitals;\n        this.getMark;\n      }\n    },\n    changeCountry(event) {\n      this.dropd2 = false;\n      this.dropd1 = false;\n      const country = event.target.value;\n      this.country = country;\n      this.getCountryWilaya();\n      SetCountry(this.$store, country, this.nextPage);\n      const { lat, long } = this.$store.getters.getCountryById(\n        this.country\n      ).name;\n      setCenter(this.$store, lat, long);\n      this.getHospitals;\n      this.getMarkers;\n    },\n    changeWilaya(event) {\n      const wilaya = event.target.value;\n      SetWilaya(this.$store, wilaya, this.nextPage);\n      fetchUnivs(\n          this.$store,\n          wilaya,\n        );\n      this.getHospitals;\n      this.getMarkers;\n\n      const { lat, long } = this.$store.getters.getWilayaById(\n        this.country,\n        wilaya\n      );\n      setCenter(this.$store, lat, long);\n    },\n    WhatToShow() {\n      this.showAll = !this.showAll;\n    },\n    getRestrictedHospital(speciaName) {\n      fetchHospitalsByParams(this.$store, this.nextPage, speciaName);\n    },\n    handleInput(e) {\n      let speciaName = e.target.value;\n      fetchHospitalsByParams(this.$store, this.nextPage, speciaName);\n    },\n    getLocation(closure) {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n                   this.long = position.coords.longitude;\n                this.lat = position.coords.latitude;\n            this.locationErrorMessage = \"\";\n            setCenter(\n              this.$store,\n              position.coords.latitude,\n              position.coords.longitude\n            );\n            /*  localStorage.setItem(\"storedData\", {\n                long: position.coords.longitude,\n                lat: position.coords.latitude,\n              });*/\n            closure();\n          },\n          (error) => {\n            if (error.code === 1) {\n              this.locationErrorMessage = \"Please allow location access.\";\n            }\n          }\n        );\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\");\n      }\n      /*}*/\n    },\n    loadMore() {\n      try {\n        this.nextPage++;\n        fetchUnivs(\n          this.$store,\n          this.nextPage,\n          this.long,\n          this.lat,\n          this.getSpecialityName\n        );\n        this.moreExists = true;\n      } catch (error) {\n        this.moreExists = false;\n      }\n    },\n    mark(event) {\n      this.destination = { lat: event.latLng.lat(), lng: event.latLng.lng() };\n      this.drawDirection();\n    },\n    drawDirection() {\n      this.path = [this.getCenter, this.destination];\n      this.filePath = {\n        path: [\n         this.getCenter, this.destination\n        ],\n        geodesic: false,\n        strokeColor: \"#22c7e5\",\n        strokeOpacity: 1.0,\n        strokeWeight: 2,\n      };\n     this.getFlightPath=this.filePath;\n    },\n    openInfoWindowTemplate(position) {\n        const { lat, lng, address } = position\n        this.infoWindow.position = { lat: lat, lng: lng }\n        this.infoWindow.template = `<b>${address}</b>`\n    \n        this.infoWindow.isFractionalZoomEnabled= true\n        this.infoWindow.open = true\n    }\n    \n  },\n  created() {\n    setCenter(this.$store, 41.015137, 28.979530)\n    this.getCountryWilaya();\n    fetchUnivs(\n        this.$store,\n        \"istanbul\",\n      );\n  },\n\n};\n  </script>\n  \n  \n  "]},"metadata":{},"sourceType":"module"}