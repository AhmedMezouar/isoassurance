{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { checkNameInArray, checkNameInArrayIdentity } from \"@/Helpers/base\";\nimport { defineStore } from \"pinia\";\nexport const useVisiteStore = defineStore(\"main\", {\n  state: () => ({\n    visite: {\n      account_id: 0,\n      childrens: [],\n      couples: [],\n      price: 0.0,\n      priceReduced: 0.0,\n      doctor_id: 0,\n      patient_identity: []\n    },\n    isAuthentificated: false,\n    originalChildrens: [],\n    originalCouples: [],\n    isFamily: false,\n    toogleChildren: false,\n    toogleCouples: false,\n    lastIndexChildren: -1,\n    lastIndexCouples: -1,\n    gender: \"Homme\"\n  }),\n  actions: {\n    async addPersonalInfromation(person) {\n      /* eslint-disable */\n      const {\n        id,\n        name,\n        surname,\n        gender,\n        age\n      } = person;\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      const doctor_id = user.data.id;\n      this.visite.patient_identity.push({\n        name: name,\n        surname: surname,\n        age: age\n      });\n      this.visite.account_id = id;\n      this.visite.doctor_id = doctor_id;\n      this.gender = gender;\n    },\n    async createPatientAlone() {\n      const person = this.visite;\n      const {\n        name,\n        surname,\n        age\n      } = person;\n      this.visite.patient_identity.push({\n        name: name,\n        surname: surname,\n        age: age\n      });\n    },\n    checkIsAuthenticated() {\n      const isAuthentificated = localStorage.getItem(\"isAuthentificated\");\n      if (isAuthentificated) return true;\n      return false;\n    },\n    async addChildren(childE, isChecked) {\n      let child = JSON.parse(childE);\n      if (checkNameInArray(this.visite.childrens, child, isChecked)) {\n        this.visite.childrens.push(child);\n        console.log(this.visite.childrens);\n      }\n      if (checkNameInArrayIdentity(this.visite.patient_identity, child, isChecked)) this.visite.patient_identity.push(child);\n    },\n    async addCouples(coupleE, isChecked) {\n      let couple = JSON.parse(coupleE);\n      if (checkNameInArray(this.visite.couples, couple, isChecked)) {\n        this.visite.couples.push(JSON.parse(coupleE));\n      }\n      if (checkNameInArrayIdentity(this.visite.patient_identity, couple, isChecked)) this.visite.patient_identity.push(couple);\n    },\n    //add original\n    async addOriginalChildrens(childrens) {\n      this.originalChildrens = childrens;\n    },\n    async addOriginalCouples(couples) {\n      this.originalCouples = couples;\n    },\n    async changeVisteToFamilyStatus() {\n      this.isFamily = true;\n    },\n    async changeVisteToAloneStatus() {\n      this.isFamily = false;\n    },\n    async addPrice(price, priceReduced) {\n      this.visite.price = price;\n      this.visite.priceReduced = priceReduced;\n    }\n  },\n  getters: {\n    getVisite(state) {\n      return state.visite;\n    }\n  }\n});","map":{"version":3,"names":["checkNameInArray","checkNameInArrayIdentity","defineStore","useVisiteStore","state","visite","account_id","childrens","couples","price","priceReduced","doctor_id","patient_identity","isAuthentificated","originalChildrens","originalCouples","isFamily","toogleChildren","toogleCouples","lastIndexChildren","lastIndexCouples","gender","actions","addPersonalInfromation","person","id","name","surname","age","user","JSON","parse","localStorage","getItem","data","push","createPatientAlone","checkIsAuthenticated","addChildren","childE","isChecked","child","console","log","addCouples","coupleE","couple","addOriginalChildrens","addOriginalCouples","changeVisteToFamilyStatus","changeVisteToAloneStatus","addPrice","getters","getVisite"],"sources":["/Users/you/Desktop/work_dev/inso-frontend-master/src/pinia/useVisite.js"],"sourcesContent":["import { checkNameInArray, checkNameInArrayIdentity } from \"@/Helpers/base\";\r\nimport { defineStore } from \"pinia\";\r\n\r\nexport const useVisiteStore = defineStore(\"main\", {\r\n  state: () => ({\r\n    visite: {\r\n      account_id: 0,\r\n      childrens: [],\r\n      couples: [],\r\n      price: 0.0,\r\n      priceReduced: 0.0,\r\n      doctor_id: 0,\r\n      patient_identity: [],\r\n    },\r\n    isAuthentificated: false,\r\n    originalChildrens: [],\r\n    originalCouples: [],\r\n    isFamily: false,\r\n    toogleChildren: false,\r\n    toogleCouples: false,\r\n    lastIndexChildren: -1,\r\n    lastIndexCouples: -1,\r\n    gender: \"Homme\",\r\n  }),\r\n  actions: {\r\n    async addPersonalInfromation(person) {\r\n      /* eslint-disable */\r\n      const { id, name, surname, gender, age } = person;\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      const doctor_id = user.data.id;\r\n      this.visite.patient_identity.push({\r\n        name: name,\r\n        surname: surname,\r\n        age: age,\r\n      });\r\n      this.visite.account_id = id;\r\n      this.visite.doctor_id = doctor_id;\r\n      this.gender = gender;\r\n    },\r\n    async createPatientAlone() {\r\n      const person = this.visite;\r\n      const { name, surname, age } = person;\r\n      this.visite.patient_identity.push({\r\n        name: name,\r\n        surname: surname,\r\n        age: age,\r\n      });\r\n    },\r\n    checkIsAuthenticated() {\r\n      const isAuthentificated = localStorage.getItem(\"isAuthentificated\");\r\n      if (isAuthentificated) return true;\r\n      return false;\r\n    },\r\n    async addChildren(childE, isChecked) {\r\n      let child = JSON.parse(childE);\r\n      if (checkNameInArray(this.visite.childrens, child, isChecked)) {\r\n        this.visite.childrens.push(child);\r\n        console.log(this.visite.childrens);\r\n      }\r\n      if (\r\n        checkNameInArrayIdentity(\r\n          this.visite.patient_identity,\r\n          child,\r\n          isChecked\r\n\r\n        )\r\n      )\r\n        this.visite.patient_identity.push(child);\r\n    },\r\n    async addCouples(coupleE, isChecked) {\r\n      let couple=JSON.parse(coupleE);\r\n      if (checkNameInArray(this.visite.couples, couple, isChecked)) {\r\n\r\n        this.visite.couples.push(JSON.parse(coupleE));\r\n      }\r\n      if (\r\n        checkNameInArrayIdentity(\r\n          this.visite.patient_identity,\r\n          couple,\r\n          isChecked\r\n        )\r\n      )\r\n        this.visite.patient_identity.push(couple);\r\n    },\r\n    //add original\r\n    async addOriginalChildrens(childrens) {\r\n      this.originalChildrens = childrens;\r\n    },\r\n    async addOriginalCouples(couples) {\r\n      this.originalCouples = couples;\r\n    },\r\n    async changeVisteToFamilyStatus() {\r\n      this.isFamily = true;\r\n    },\r\n    async changeVisteToAloneStatus() {\r\n      this.isFamily = false;\r\n    },\r\n    async addPrice(price, priceReduced) {\r\n      this.visite.price = price;\r\n      this.visite.priceReduced = priceReduced;\r\n    },\r\n  },\r\n  getters: {\r\n    getVisite(state) {\r\n      return state.visite;\r\n    },\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}