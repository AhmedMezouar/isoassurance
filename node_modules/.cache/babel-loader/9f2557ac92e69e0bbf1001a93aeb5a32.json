{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapMutations } from 'vuex';\nimport { useVisiteStore } from \"@/pinia/useVisite\";\nexport default {\n  data() {\n    return {\n      showLangDropDown: false,\n      lang: \"en\",\n      eng: \"English\",\n      frc: \"Français\",\n      arb: \"العربية\",\n      tur: \"Türkçe\",\n      appointement: null\n    };\n  },\n  computed: {\n    tr(txt) {\n      return this.$store.getters.getT(txt);\n    },\n    authenticated() {\n      return this.appointement.checkIsAuthenticated();\n    },\n    username() {\n      return this.authenticated ? this.$store.getters.getuserInfoDAta.name + ' ' + this.$store.getters.getuserInfoDAta.surname : 'login';\n    }\n  },\n  methods: {\n    t(txt) {\n      return this.$store.getters.getT(txt);\n    },\n    ...mapMutations(['SET_showModal',\n    // map `this.increment()` to `this.$store.commit('increment')`\n\n    // `mapMutations` also supports payloads:\n    'SET_typeModal' // map `this.incrementBy(amount)` to `this.$store.commit('incrementBy', amount)`\n    ]),\n\n    showInsoModal() {\n      if (this.authenticated) {\n        this.$router.push('/visite');\n      } else {\n        this.$router.push('/visite/login');\n      }\n    },\n    showLangDropDownFct() {\n      this.showLangDropDown = !this.showLangDropDown;\n    },\n    changeLang(lang) {\n      this.lang = lang;\n      this.$store.commit('SET_lang', this.lang);\n      this.showLangDropDown = false;\n    }\n  },\n  created() {\n    this.appointement = useVisiteStore();\n  }\n};","map":{"version":3,"mappings":";AAsCI,SAASA,YAAW,QAAS,MAAK;AAClC,SAASC,cAAa,QAAS,mBAAkB;AACjD,eAAe;EACXC,IAAI,GAAE;IACF,OAAO;MACHC,gBAAgB,EAAC,KAAK;MACtBC,IAAI,EAAC,IAAI;MACTC,GAAG,EAAC,SAAS;MACbC,GAAG,EAAC,UAAU;MACdC,GAAG,EAAC,SAAS;MACbC,GAAG,EAAC,QAAQ;MACZC,YAAY,EAAC;IACjB;EACJ,CAAC;EAEDC,QAAQ,EAAE;IACNC,EAAC,CAAGC,GAAG,EAAE;MACL,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,IAAI,CAACH,GAAG;IACvC,CAAC;IACDI,aAAa,GAAE;MACX,OAAO,IAAI,CAACP,YAAY,CAACQ,oBAAoB,EAAE;IACnD,CAAC;IACDC,QAAQ,GAAE;MACN,OAAO,IAAI,CAACF,aAAa,GAAE,IAAI,CAACH,MAAM,CAACC,OAAO,CAACK,eAAe,CAACC,IAAI,GAAC,GAAG,GAAC,IAAI,CAACP,MAAM,CAACC,OAAO,CAACK,eAAe,CAACE,OAAM,GAAG,OAAM;IAC/H;EACJ,CAAC;EACDC,OAAO,EAAE;IAELC,EAAGX,GAAG,EAAE;MACJ,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,IAAI,CAACH,GAAG;IACvC,CAAC;IACD,GAAGZ,YAAY,CAAC,CAChB,eAAe;IAAE;;IAEjB;IACA,eAAc,CAAE;IAAA,CACf,CAAC;;IACFwB,aAAa,GAAE;MACX,IAAI,IAAI,CAACR,aAAa,EAAE;QACpB,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC,SAAS;MAC/B,OAAO;QACH,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,eAAe;MACrC;IACJ,CAAC;IACDC,mBAAmB,GAAE;MACjB,IAAI,CAACxB,gBAAgB,GAAC,CAAC,IAAI,CAACA,gBAAe;IAC/C,CAAC;IACDyB,UAAU,CAACxB,IAAI,EAAC;MACZ,IAAI,CAACA,IAAI,GAACA,IAAI;MACd,IAAI,CAACS,MAAM,CAACgB,MAAM,CAAC,UAAU,EAAC,IAAI,CAACzB,IAAI;MACvC,IAAI,CAACD,gBAAgB,GAAC,KAAI;IAC9B;EACJ,CAAC;EACD2B,OAAO,GAAE;IACL,IAAI,CAACrB,YAAW,GAAIR,cAAc,EAAE;EACxC;AACJ","names":["mapMutations","useVisiteStore","data","showLangDropDown","lang","eng","frc","arb","tur","appointement","computed","tr","txt","$store","getters","getT","authenticated","checkIsAuthenticated","username","getuserInfoDAta","name","surname","methods","t","showInsoModal","$router","push","showLangDropDownFct","changeLang","commit","created"],"sourceRoot":"","sources":["/Users/you/Desktop/work_dev/inso-frontend-master/src/components/header/MyHeaderRightPart.vue"],"sourcesContent":["<template>\r\n    <div class=\"flex items-center h-full\" :class=\"$store.getters.getL === 'ar'?'lg:ml-0 ml-2':'lg:mr-0 mr-2'\">\r\n        \r\n        <div id=\"log\" class=\"\">\r\n            <div @click=\"showInsoModal()\" class=\"cursor-pointer flex items-center\">\r\n                <div class=\"noimg\">\r\n                    <img src=\"/inso-pics/avatar-man.png\" alt=\"\" height=\"18\">\r\n                    <span class=\"connected p-1\" v-if=\"authenticated\"></span>\r\n                </div>\r\n                <p class=\"userName hidden lg:flex\">\r\n                    {{$store.getters.getT(username)}}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<style scoped>\r\n    .connected{\r\n        background: lawngreen;\r\n        border-radius: 100%;\r\n    }\r\n    #log{\r\n        align-items: center;\r\n    }\r\n    .userName{\r\n        white-space: nowrap;\r\n        margin-bottom: 0px !important;\r\n    }\r\n    .userimg{\r\n        display:none;\r\n    }\r\n    .connected{\r\n        position: absolute;\r\n        bottom:0;\r\n        left: 0;\r\n    }\r\n</style>\r\n<script>\r\n    import { mapMutations } from 'vuex'\r\n    import { useVisiteStore } from \"@/pinia/useVisite\"\r\n    export default {\r\n        data(){\r\n            return {\r\n                showLangDropDown:false,\r\n                lang:\"en\",\r\n                eng:\"English\",\r\n                frc:\"Français\",\r\n                arb:\"العربية\",\r\n                tur:\"Türkçe\",\r\n                appointement:null,\r\n            }\r\n        },\r\n        \r\n        computed: {\r\n            tr (txt) {\r\n                return this.$store.getters.getT(txt)\r\n            },\r\n            authenticated(){\r\n                return this.appointement.checkIsAuthenticated();\r\n            },\r\n            username(){\r\n                return this.authenticated? this.$store.getters.getuserInfoDAta.name+' '+this.$store.getters.getuserInfoDAta.surname :'login'\r\n            }\r\n        },\r\n        methods: {\r\n            \r\n            t (txt) {\r\n                return this.$store.getters.getT(txt)\r\n            },\r\n            ...mapMutations([\r\n            'SET_showModal', // map `this.increment()` to `this.$store.commit('increment')`\r\n\r\n            // `mapMutations` also supports payloads:\r\n            'SET_typeModal' // map `this.incrementBy(amount)` to `this.$store.commit('incrementBy', amount)`\r\n            ]),\r\n            showInsoModal(){\r\n                if (this.authenticated) {\r\n                    this.$router.push('/visite') \r\n                } else {\r\n                    this.$router.push('/visite/login') \r\n                }\r\n            },\r\n            showLangDropDownFct(){\r\n                this.showLangDropDown=!this.showLangDropDown\r\n            },\r\n            changeLang(lang){\r\n                this.lang=lang;\r\n                this.$store.commit('SET_lang',this.lang)\r\n                this.showLangDropDown=false\r\n            }\r\n        },\r\n        created(){\r\n            this.appointement = useVisiteStore();\r\n        },\r\n    }\r\n</script>"]},"metadata":{},"sourceType":"module"}