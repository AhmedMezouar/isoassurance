{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CatalogueService from \"@/services/CatalogueService\";\nexport const namespaced = true;\nexport const state = {\n  hospitals: [],\n  markers: [],\n  hospitalsTotal: 0,\n  hospital: {},\n  wilaya: \"\",\n  country: \"\",\n  name: \"\",\n  lat: 0,\n  long: 0,\n  url: \"/api/crib/filter\"\n};\nexport const mutations = {\n  SET_HOSPITALS(state, hospitals) {\n    state.hospitals.push(...hospitals);\n  },\n  SET_HOSPITALS_TOTAL(state, hospitalsTotal) {\n    state.hospitalsTotal = hospitalsTotal;\n  },\n  RESSET_HOSPITALS(state, params) {\n    const {\n      name\n    } = params;\n    if (name == state.name) state.hospitals = [];\n  },\n  SET_NAME(state, params) {\n    const {\n      name\n    } = params;\n    state.name = name;\n  },\n  SET_HOSPITAL(state, hospital) {\n    state.hospital = hospital;\n  },\n  SET_CORDINATES(state, lat, long = 0) {\n    state.lat = lat;\n    state.long = long;\n  },\n  SET_COUNTRY(state, country) {\n    if (country != state.country) {\n      state.hospitals = [];\n    }\n    state.country = country;\n  },\n  SET_WILAYA(state, wilaya) {\n    if (wilaya != state.wilaya) {\n      state.hospitals = [];\n    }\n    state.wilaya = wilaya;\n  },\n  SET_MARKERS(state, markers) {\n    state.markers = markers;\n  }\n};\nexport const actions = {\n  fetchCrech({\n    commit\n  }, params) {\n    const {\n      nextPage,\n      ...data\n    } = params;\n    CatalogueService.getAll(state.url, nextPage, data).then(response => {\n      commit(\"SET_HOSPITALS_TOTAL\", parseInt(response.headers[\"x-total-count\"]));\n      commit(\"SET_NAME\", params);\n      commit(\"RESSET_HOSPITALS\", params);\n      commit(\"SET_HOSPITALS\", response.data.data);\n    }).catch(error => {\n      console.log(\"There was an error:\");\n      console.log(error);\n    });\n  },\n  setCordinates({\n    commit\n  }, lat, long) {\n    commit(\"SET_CORDINATES\", lat, long);\n  },\n  setWilaya({\n    commit\n  }, wilaya) {\n    commit(\"SET_WILAYA\", wilaya);\n  },\n  setCountry({\n    commit\n  }, country) {\n    commit(\"SET_COUNTRY\", country);\n  },\n  setMarkers({\n    commit\n  }, markers) {\n    commit(\"SET_MARKERS\", markers);\n  },\n  getMarkers({\n    commit\n  }) {\n    const markers = [];\n    if (state.hospitals.length != 0) {\n      state.hospitals.forEach((hospital, index) => {\n        if (hospital.latitude) {\n          markers[index] = {\n            lat: parseFloat(hospital.latitude),\n            lng: parseFloat(hospital.longitude),\n            address: hospital.address,\n            address_url: hospital.address_url,\n            address_displayed: hospital.address_displayed\n          };\n        }\n      });\n      commit(\"SET_MARKERS\", markers);\n    } else {\n      commit(\"SET_MARKERS\", markers);\n    }\n  }\n};\nexport const getters = {};","map":{"version":3,"names":["CatalogueService","namespaced","state","hospitals","markers","hospitalsTotal","hospital","wilaya","country","name","lat","long","url","mutations","SET_HOSPITALS","push","SET_HOSPITALS_TOTAL","RESSET_HOSPITALS","params","SET_NAME","SET_HOSPITAL","SET_CORDINATES","SET_COUNTRY","SET_WILAYA","SET_MARKERS","actions","fetchCrech","commit","nextPage","data","getAll","then","response","parseInt","headers","catch","error","console","log","setCordinates","setWilaya","setCountry","setMarkers","getMarkers","length","forEach","index","latitude","parseFloat","lng","longitude","address","address_url","address_displayed","getters"],"sources":["/Users/you/Desktop/work_dev/inso-frontend-master/src/store/modules/cresh.js"],"sourcesContent":["import CatalogueService from \"@/services/CatalogueService\";\n\nexport const namespaced = true;\n\nexport const state = {\n  hospitals: [],\n  markers: [],\n  hospitalsTotal: 0,\n  hospital: {},\n  wilaya: \"\",\n  country: \"\",\n  name:\"\",\n  lat: 0,\n  long: 0,\n  url:\"/api/crib/filter\"\n};\n\nexport const mutations = {\n  SET_HOSPITALS(state, hospitals) {\n    state.hospitals.push(...hospitals);\n  },\n  SET_HOSPITALS_TOTAL(state, hospitalsTotal) {\n    state.hospitalsTotal = hospitalsTotal;\n  },\n  RESSET_HOSPITALS(state, params) {\n    const { name } = params;\n    if (name == state.name) state.hospitals = [];\n  },\n  SET_NAME(state, params) {\n    const { name } = params;\n    state.name = name;\n  },\n  SET_HOSPITAL(state, hospital) {\n    state.hospital = hospital;\n  },\n  SET_CORDINATES(state, lat, long=0) {\n    state.lat = lat;\n    state.long = long;\n  },\n  SET_COUNTRY(state, country) {\n    if (country != state.country) {\n      state.hospitals = [];\n    }\n    state.country = country;\n  },\n  SET_WILAYA(state, wilaya) {\n    if (wilaya != state.wilaya) {\n      state.hospitals = [];\n    }\n    state.wilaya = wilaya;\n  },\n  SET_MARKERS(state, markers) {\n    state.markers = markers;\n  },\n};\n\nexport const actions = {\n  fetchCrech({ commit }, params) {\n    const { nextPage, ...data } = params;\n    \n    CatalogueService.getAll(state.url,nextPage, data)\n    .then((response) => {\n      commit(\n        \"SET_HOSPITALS_TOTAL\",\n        parseInt(response.headers[\"x-total-count\"])\n      );\n      commit(\"SET_NAME\", params);\n      commit(\"RESSET_HOSPITALS\", params);\n      commit(\"SET_HOSPITALS\", response.data.data);\n    })\n    .catch((error) => {\n      console.log(\"There was an error:\");\n      console.log(error)\n    });\n  },\n  setCordinates({ commit }, lat, long) {\n    commit(\"SET_CORDINATES\", lat, long);\n  },\n  setWilaya({ commit }, wilaya) {\n    commit(\"SET_WILAYA\", wilaya);\n  },\n  setCountry({ commit }, country) {\n    commit(\"SET_COUNTRY\", country);\n  },\n  setMarkers({ commit }, markers) {\n    commit(\"SET_MARKERS\", markers);\n  },\n  getMarkers({ commit }) {\n    const markers = [];\n    if (state.hospitals.length != 0) {\n      state.hospitals.forEach((hospital, index) => {\n        if (hospital.latitude) {\n          markers[index] = {\n            lat: parseFloat(hospital.latitude),\n            lng: parseFloat(hospital.longitude),\n            address: hospital.address,\n            address_url: hospital.address_url,\n            address_displayed: hospital.address_displayed,\n          };\n        }\n      });\n      commit(\"SET_MARKERS\", markers);\n    } else {\n      commit(\"SET_MARKERS\", markers);\n    }\n  },\n};\nexport const getters = {};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}