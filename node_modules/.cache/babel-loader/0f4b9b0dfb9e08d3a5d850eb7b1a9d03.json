{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-bd4ae5ca\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"phoneIcnns my-4\"\n};\nconst _hoisted_2 = {\n  class: \"flex icnss\"\n};\nconst _hoisted_3 = [\"onMouseover\", \"onMouseleave\"];\nconst _hoisted_4 = {\n  class: \"card\"\n};\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = {\n  class: \"row\"\n};\nconst _hoisted_7 = {\n  class: \"col-6\"\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  class: \"col-6\"\n};\nconst _hoisted_10 = {\n  class: \"tit-2\"\n};\nconst _hoisted_11 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_P = _resolveComponent(\"P\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getHospitals, (hospital, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"col-12\",\n      key: index,\n      onMouseover: $event => $options.hoverMarker(index),\n      onMouseleave: $event => $options.leaveMarker(index)\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"img\", {\n      src: hospital.image.length > 0 ? 'https://admin-assurance-private.assuranceiso.com/web/images/' + hospital.image : '/inso-pics/Myplaceholder.jpg',\n      class: \"img-fluid\",\n      style: {\n        \"object-fit\": \"contain\",\n        \"background\": \"rgba(0, 0, 0, 0.15)\",\n        \"width\": \"100px\",\n        \"height\": \"70px\"\n      }\n    }, null, 8 /* PROPS */, _hoisted_8)]), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_P, {\n      class: \"tit-1\",\n      style: {\n        \"font-weight\": \"bold\"\n      }\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(hospital.name), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */), _createElementVNode(\"p\", _hoisted_10, _toDisplayString(hospital.name), 1 /* TEXT */), _createElementVNode(\"a\", {\n      onClick: $event => _ctx.gotolinks(hospital.link, index),\n      class: \"btn-primary\"\n    }, \"S'avoir plus\", 8 /* PROPS */, _hoisted_11)])])])])], 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\"\\n        <div class=\\\"col-sm-9 col-12\\\">\\n                        <div class=\\\"row roo4\\\">\\n                          <div class=\\\"col-12\\\">\\n                            <h5 class=\\\"card-title\\\" style=\\\"font-weight: bold;\\\">{{ hospital.name }}</h5>\\n                          </div>\\n                          <div class=\\\"col-12\\\">\\n                            <p class=\\\"card-title card-title-2\\\">{{ hospital.name }}</p>\\n                          </div>\\n                          <div class=\\\"row button-vers\\\">\\n                            <div class=\\\"col-md-4 col-12\\\" style=\\\"font-size: 14px !important;\\\">\\n                              <a @click=\\\"gotolinks(hospital.link, index)\\\" class=\\\"btn-primary\\\">\\n                                Appeler</a>\\n                            </div>\\n                            <div class=\\\"col-md-4 col-12\\\" style=\\\"font-size: 14px !important;\\\">\\n                              <a @click=\\\"gotolinks(hospital.link, index)\\\" class=\\\"btn-primary\\\">\\n                                Localisation</a>\\n                            </div>\\n                            <div class=\\\"col-md-4 col-12\\\" style=\\\"font-size: 14px !important;\\\">\\n                              <a @click=\\\"gotolinks(hospital.link, index)\\\" class=\\\"btn-primary\\\">\\n                                <i class=\\\"fas fa-microsoft-word word-icon\\\"></i>\\n                                Site-Web</a>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n    \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;AAAiB;;EACnBA,KAAK,EAAC;AAAY;;;EAEVA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAK;;EACPA,KAAK,EAAC;AAAO;;;EAKbA,KAAK,EAAC;AAAO;;EAEXA,KAAK,EAAC;AAAO;;;;6DAbxCC,oBAqBM,OArBNC,UAqBM,GApBFD,oBAmBM,OAnBNE,UAmBM,sBAlBFC,oBAiBMC,6BAjB0CC,qBAAY,GAAhCC,QAAQ,EAAEC,KAAK;yBAA3CJ,oBAiBM;MAjBDJ,KAAK,EAAC,QAAQ;MAA4CS,GAAG,EAAED,KAAK;MAAGE,WAAS,YAAEJ,oBAAW,CAACE,KAAK;MAAIG,YAAU,YAAEL,oBAAW,CAACE,KAAK;QACrIP,oBAeM,OAfNW,UAeM,GAdJX,oBAaM,OAbNY,UAaM,GAZJZ,oBAWM,OAXNa,UAWM,GAVFb,oBAIM,OAJNc,UAIM,GAHFd,oBAE8G;MAD7Ge,GAAG,EAAET,QAAQ,CAACU,KAAK,CAACC,MAAM,wEAAwEX,QAAQ,CAACU,KAAK;MACjHjB,KAAK,EAAC,WAAW;MAACmB,KAAyF,EAAzF;QAAA;QAAA;QAAA;QAAA;MAAA;2CAEtBlB,oBAIM,OAJNmB,UAIM,GAHFC,aAAmEC;MAAhEtB,KAAK,EAAC,OAAO;MAACmB,KAA0B,EAA1B;QAAA;MAAA;;wBAA2B,MAAmB,mCAAhBZ,QAAQ,CAACgB,IAAI;;;kCAC5DtB,oBAAwC,KAAxCuB,WAAwC,mBAApBjB,QAAQ,CAACgB,IAAI,kBACjCtB,oBAAgF;MAA5EwB,OAAK,YAAEC,cAAS,CAACnB,QAAQ,CAACoB,IAAI,EAAEnB,KAAK;MAAGR,KAAK,EAAC;OAAc,cAAY;sCASpG4B,kiDA0BG","names":["class","_createElementVNode","_hoisted_1","_hoisted_2","_createElementBlock","_Fragment","$options","hospital","index","key","onMouseover","onMouseleave","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","src","image","length","style","_hoisted_9","_createVNode","_component_P","name","_hoisted_10","onClick","_ctx","link","_createCommentVNode"],"sourceRoot":"","sources":["/Users/you/Desktop/work_dev/inso-frontend-master/src/components/MainContant/PhonePart9.vue"],"sourcesContent":["<template>\n    <div class=\"phoneIcnns my-4\">\n        <div class=\"flex icnss\">\n            <div class=\"col-12\" v-for=\"(hospital, index) in getHospitals\" :key=\"index\" @mouseover=\"hoverMarker(index)\" @mouseleave=\"leaveMarker(index)\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <img\n                            :src=\"hospital.image.length > 0 ? 'https://admin-assurance-private.assuranceiso.com/web/images/' + hospital.image : '/inso-pics/Myplaceholder.jpg'\"\n                            class=\"img-fluid\" style=\"object-fit: contain; background: rgba(0, 0, 0, 0.15); width: 100px; height: 70px;\" />\n                        </div>\n                        <div class=\"col-6\">\n                            <P class=\"tit-1\" style=\"font-weight: bold;\">{{ hospital.name }}</p>\n                            <p class=\"tit-2\">{{ hospital.name }}</p>\n                            <a @click=\"gotolinks(hospital.link, index)\" class=\"btn-primary\">S'avoir plus</a>\n                        </div>\n                    </div>\n                  </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <!--\n        <div class=\"col-sm-9 col-12\">\n                        <div class=\"row roo4\">\n                          <div class=\"col-12\">\n                            <h5 class=\"card-title\" style=\"font-weight: bold;\">{{ hospital.name }}</h5>\n                          </div>\n                          <div class=\"col-12\">\n                            <p class=\"card-title card-title-2\">{{ hospital.name }}</p>\n                          </div>\n                          <div class=\"row button-vers\">\n                            <div class=\"col-md-4 col-12\" style=\"font-size: 14px !important;\">\n                              <a @click=\"gotolinks(hospital.link, index)\" class=\"btn-primary\">\n                                Appeler</a>\n                            </div>\n                            <div class=\"col-md-4 col-12\" style=\"font-size: 14px !important;\">\n                              <a @click=\"gotolinks(hospital.link, index)\" class=\"btn-primary\">\n                                Localisation</a>\n                            </div>\n                            <div class=\"col-md-4 col-12\" style=\"font-size: 14px !important;\">\n                              <a @click=\"gotolinks(hospital.link, index)\" class=\"btn-primary\">\n                                <i class=\"fas fa-microsoft-word word-icon\"></i>\n                                Site-Web</a>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n    -->\n</template>\n<style scoped>\n.card {\n    margin-top:20px;\n    margin-left: 15px;\n    width: 100%;\n    font-size: 9px;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.card:hover {\n    border: 2px solid #1e85f1;\n    height: auto !important;\n}\n.btn-primary {\n    padding: 2px 12px 2px 12px;\n    font-size: 8px;\n}\n.tit-1 {\n    margin-top: 10px;\n}\n.tit-2 {\n    margin-top: -12px;\n}\n</style>\n<script>\nimport {\n  fetchHospitalsByParams,\n  fetchHospitals,\n  SetCountry,\n  SetWilaya,\n  getMarkers,\n  setCenter ,mark_marker ,leave_marker\n} \nfrom \"../../composable/index\";\nimport { mapMutations } from \"vuex\";\n\n\nexport default {\n  data() {\n    return {\n      typeData: \"map\",\n      mapCenter: {\n        lat: null,\n        lng: null,\n      },\n      lat: \"\",\n      long: \"\",\n      nextPage: 1,\n      hospitals: [],\n      markers: [],\n      moreExists: false,\n      country: \"\",\n      wilaya: [],\n      countries: [],\n      dropd1: false,\n      dropd2: false,\n      destination: {},\n      path: [],\n      flightPath: null,\n      infoWindowPos: null,\n      infoContent: null,\n      currentMidx: null,\n      infoWinOpen: false,\n      closeModal: false,\n      filter: false,\n      showHosMap: true,\n      search: false,\n      focust: false,\n    };\n  },\n  computed: {\n    getCenter: {\n      get() {\n        return {\n          lat: this.$store.state.map.lat,\n          lng: this.$store.state.map.long,\n        };\n      },\n      set() {\n        this.markers.push({\n          lat: this.$store.state.map.lat,\n          lng: this.$store.state.map.long,\n        });\n      },\n    },\n    getFlightPath: {\n      get() {\n        return this.flightPath\n      },\n      set(value) {\n        this.flightPath = value\n      },\n    },\n    getMarkers() {\n      this.getHospitals;\n      getMarkers(this.$store);\n      return this.$store.state.catalogue.markers;\n    },\n    getHospitals() {\n\n      return this.$store.state.catalogue.hospitals;\n    },\n    getSpecialityName() {\n      return this.$store.state.speciality.specialityName;\n    },\n    getSpecialities() {\n      return this.$store.state.speciality.specialities;\n    },\n    tillOpnned() {\n      return this.closeModal\n    },\n  },\n\n  methods: {\n\n    toggleInfoWindow: function (marker, idx) {\n\n      this.infoWindowPos = marker;\n\n      if (this.infoWindowPos) {\n        this.infoWinOpen = !this.infoWinOpen;\n        this.currentMidx = idx;\n        this.closeModal = false;\n      }\n    },\n    openSelected: function (index) {\n      if (index == this.currentMidx) {\n        if (!this.closeModal) {\n          return true\n        } else {\n          return false;\n        }\n\n      }\n      return false\n    },\n    close: function () {\n      this.closeModal = true;\n    },\n\n    ...mapMutations([\n      \"SET_showModal\", // map `this.increment()` to `this.$store.commit('increment')`\n\n      // `mapMutations` also supports payloads:\n      \"SET_typeModal\", // map `this.incrementBy(amount)` to `this.$store.commit('incrementBy', amount)`\n    ]),\n    showInsoModal(index) {\n      /* mark_marker(index) */\n      this.$store.commit(\"SET_typeModal\", { index, typeModal: \"hospital\" });\n    },\n    hoverMarker(index){\n      if(this.showHosMap){\n        mark_marker(index)\n      }\n    },\n    leaveMarker(index){\n      leave_marker(index)\n    },\n    getCountryWilaya() {\n      this.countries = this.$store.getters.getCountries;\n      if (this.country != \"\") {\n        this.wilaya = this.$store.getters.getCountryById(this.country).wilaya;\n      }\n    },\n    closeit() {\n      this.$refs.searchtxt.value = null;\n      this.focust = false;\n      this.hideSearch()\n    },\n    showSearch() {\n      this.search = true\n    },\n    hideSearch() {\n      !this.focust ? this.search = false : this.search\n    },\n    fct() {\n      this.showSearch()\n      this.focust = true\n    },\n    changeMyCountry(key) {\n      this.dropd2 = false;\n      this.dropd1 = false;\n      if (key != \"\") {\n        this.country = key;\n        this.getCountryWilaya();\n        SetCountry(this.$store, this.country, this.nextPage);\n        const { lat, long } = this.$store.getters.getCountryById(\n          this.country\n        ).name;\n\n        setCenter(this.$store, lat, long);\n        this.getHospitals;\n        this.getMark;\n      }\n    },\n    changeCountry(event) {\n      this.dropd2 = false;\n      this.dropd1 = false;\n      const country = event.target.value;\n      this.country = country;\n      this.getCountryWilaya();\n      SetCountry(this.$store, country, this.nextPage);\n      const { lat, long } = this.$store.getters.getCountryById(\n        this.country\n      ).name;\n      setCenter(this.$store, lat, long);\n      this.getHospitals;\n      this.getMarkers;\n    },\n    changeWilaya(event) {\n      const wilaya = event.target.value;\n      SetWilaya(this.$store, wilaya, this.nextPage);\n      this.getHospitals;\n      this.getMarkers;\n\n      const { lat, long } = this.$store.getters.getWilayaById(\n        this.country,\n        wilaya\n      );\n      setCenter(this.$store, lat, long);\n    },\n    WhatToShow() {\n      this.showAll = !this.showAll;\n    },\n    getRestrictedHospital(speciaName) {\n      fetchHospitalsByParams(this.$store, this.nextPage, speciaName);\n    },\n    handleInput(e) {\n      let speciaName = e.target.value;\n      fetchHospitalsByParams(this.$store, this.nextPage, speciaName);\n      this.getHospitals;\n      this.getMarkers;\n    },\n    getLocation(closure) {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            this.long = position.coords.longitude;\n            this.lat = position.coords.latitude;\n            this.mapCenter.lat = position.coords.latitude;\n            this.mapCenter.lng = position.coords.longitude;\n            this.locationErrorMessage = \"\";\n            setCenter(\n              this.$store,\n              position.coords.latitude,\n              position.coords.longitude\n            );\n            /*  localStorage.setItem(\"storedData\", {\n                long: position.coords.longitude,\n                lat: position.coords.latitude,\n              });*/\n            closure();\n          },\n          (error) => {\n            if (error.code === 1) {\n              this.locationErrorMessage = \"Please allow location access.\";\n            }\n          }\n        );\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\");\n      }\n      /*}*/\n    },\n    loadMore() {\n      try {\n        this.nextPage++;\n        fetchHospitals(\n          this.$store,\n          this.nextPage,\n          this.long,\n          this.lat,\n          this.getSpecialityName,\n          \"\",\n          \"\"\n        );\n        this.moreExists = true;\n      } catch (error) {\n        this.moreExists = false;\n      }\n    },\n    mark(event) {\n      this.destination = { lat: event.latLng.lat(), lng: event.latLng.lng() };\n      this.drawDirection();\n    },\n    drawDirection() {\n      this.path = [this.getCenter, this.destination];\n      this.filePath = {\n        path: [\n          this.getCenter, this.destination\n        ],\n        geodesic: false,\n        strokeColor: \"#22c7e5\",\n        strokeOpacity: 1.0,\n        strokeWeight: 2,\n      };\n      this.getFlightPath = this.filePath;\n    },\n    openInfoWindowTemplate(position) {\n      const { lat, lng, address } = position\n      this.infoWindow.position = { lat: lat, lng: lng }\n      this.infoWindow.template = `<b>${address}</b>`\n\n      this.infoWindow.isFractionalZoomEnabled = true\n      this.infoWindow.open = true\n    }\n\n  },\n\n};\n</script>"]},"metadata":{},"sourceType":"module"}