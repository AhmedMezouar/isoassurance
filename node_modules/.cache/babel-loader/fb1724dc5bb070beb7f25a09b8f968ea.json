{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { fetchHospitalsByParams, fetchHospitals, SetCountry, SetWilaya, getMarkers, setCenter, mark_marker, leave_marker } from \"../../composable/index\";\nimport { mapMutations } from \"vuex\";\nexport default {\n  data() {\n    return {\n      typeData: \"map\",\n      mapCenter: {\n        lat: null,\n        lng: null\n      },\n      lat: \"\",\n      long: \"\",\n      nextPage: 1,\n      hospitals: [],\n      markers: [],\n      moreExists: false,\n      country: \"\",\n      wilaya: [],\n      countries: [],\n      dropd1: false,\n      dropd2: false,\n      destination: {},\n      path: [],\n      flightPath: null,\n      infoWindowPos: null,\n      infoContent: null,\n      currentMidx: null,\n      infoWinOpen: false,\n      closeModal: false,\n      filter: false,\n      showHosMap: true,\n      search: false,\n      focust: false\n    };\n  },\n  computed: {\n    getCenter: {\n      get() {\n        return {\n          lat: this.$store.state.map.lat,\n          lng: this.$store.state.map.long\n        };\n      },\n      set() {\n        this.markers.push({\n          lat: this.$store.state.map.lat,\n          lng: this.$store.state.map.long\n        });\n      }\n    },\n    getFlightPath: {\n      get() {\n        return this.flightPath;\n      },\n      set(value) {\n        this.flightPath = value;\n      }\n    },\n    getMarkers() {\n      this.getHospitals;\n      getMarkers(this.$store);\n      return this.$store.state.catalogue.markers;\n    },\n    getHospitals() {\n      return this.$store.state.catalogue.hospitals;\n    },\n    getSpecialityName() {\n      return this.$store.state.speciality.specialityName;\n    },\n    getSpecialities() {\n      return this.$store.state.speciality.specialities;\n    },\n    tillOpnned() {\n      return this.closeModal;\n    }\n  },\n  methods: {\n    toggleInfoWindow: function (marker, idx) {\n      this.infoWindowPos = marker;\n      if (this.infoWindowPos) {\n        this.infoWinOpen = !this.infoWinOpen;\n        this.currentMidx = idx;\n        this.closeModal = false;\n      }\n    },\n    openSelected: function (index) {\n      if (index == this.currentMidx) {\n        if (!this.closeModal) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n      return false;\n    },\n    close: function () {\n      this.closeModal = true;\n    },\n    ...mapMutations([\"SET_showModal\",\n    // map `this.increment()` to `this.$store.commit('increment')`\n\n    // `mapMutations` also supports payloads:\n    \"SET_typeModal\" // map `this.incrementBy(amount)` to `this.$store.commit('incrementBy', amount)`\n    ]),\n\n    showInsoModal(index) {\n      /* mark_marker(index) */\n      this.$store.commit(\"SET_typeModal\", {\n        index,\n        typeModal: \"hospital\"\n      });\n    },\n    hoverMarker(index) {\n      if (this.showHosMap) {\n        mark_marker(index);\n      }\n    },\n    leaveMarker(index) {\n      leave_marker(index);\n    },\n    getCountryWilaya() {\n      this.countries = this.$store.getters.getCountries;\n      if (this.country != \"\") {\n        this.wilaya = this.$store.getters.getCountryById(this.country).wilaya;\n      }\n    },\n    closeit() {\n      this.$refs.searchtxt.value = null;\n      this.focust = false;\n      this.hideSearch();\n    },\n    showSearch() {\n      this.search = true;\n    },\n    hideSearch() {\n      !this.focust ? this.search = false : this.search;\n    },\n    fct() {\n      this.showSearch();\n      this.focust = true;\n    },\n    changeMyCountry(key) {\n      this.dropd2 = false;\n      this.dropd1 = false;\n      if (key != \"\") {\n        this.country = key;\n        this.getCountryWilaya();\n        SetCountry(this.$store, this.country, this.nextPage);\n        const {\n          lat,\n          long\n        } = this.$store.getters.getCountryById(this.country).name;\n        setCenter(this.$store, lat, long);\n        this.getHospitals;\n        this.getMark;\n      }\n    },\n    changeCountry(event) {\n      this.dropd2 = false;\n      this.dropd1 = false;\n      const country = event.target.value;\n      this.country = country;\n      this.getCountryWilaya();\n      SetCountry(this.$store, country, this.nextPage);\n      const {\n        lat,\n        long\n      } = this.$store.getters.getCountryById(this.country).name;\n      setCenter(this.$store, lat, long);\n      this.getHospitals;\n      this.getMarkers;\n    },\n    changeWilaya(event) {\n      const wilaya = event.target.value;\n      SetWilaya(this.$store, wilaya, this.nextPage);\n      this.getHospitals;\n      this.getMarkers;\n      const {\n        lat,\n        long\n      } = this.$store.getters.getWilayaById(this.country, wilaya);\n      setCenter(this.$store, lat, long);\n    },\n    WhatToShow() {\n      this.showAll = !this.showAll;\n    },\n    getRestrictedHospital(speciaName) {\n      fetchHospitalsByParams(this.$store, this.nextPage, speciaName);\n    },\n    handleInput(e) {\n      let speciaName = e.target.value;\n      fetchHospitalsByParams(this.$store, this.nextPage, speciaName);\n      this.getHospitals;\n      this.getMarkers;\n    },\n    getLocation(closure) {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          this.long = position.coords.longitude;\n          this.lat = position.coords.latitude;\n          this.mapCenter.lat = position.coords.latitude;\n          this.mapCenter.lng = position.coords.longitude;\n          this.locationErrorMessage = \"\";\n          setCenter(this.$store, position.coords.latitude, position.coords.longitude);\n          /*  localStorage.setItem(\"storedData\", {\n              long: position.coords.longitude,\n              lat: position.coords.latitude,\n            });*/\n          closure();\n        }, error => {\n          if (error.code === 1) {\n            this.locationErrorMessage = \"Please allow location access.\";\n          }\n        });\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\");\n      }\n      /*}*/\n    },\n\n    loadMore() {\n      try {\n        this.nextPage++;\n        fetchHospitals(this.$store, this.nextPage, this.long, this.lat, this.getSpecialityName, \"\", \"\");\n        this.moreExists = true;\n      } catch (error) {\n        this.moreExists = false;\n      }\n    },\n    mark(event) {\n      this.destination = {\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng()\n      };\n      this.drawDirection();\n    },\n    drawDirection() {\n      this.path = [this.getCenter, this.destination];\n      this.filePath = {\n        path: [this.getCenter, this.destination],\n        geodesic: false,\n        strokeColor: \"#22c7e5\",\n        strokeOpacity: 1.0,\n        strokeWeight: 2\n      };\n      this.getFlightPath = this.filePath;\n    },\n    openInfoWindowTemplate(position) {\n      const {\n        lat,\n        lng,\n        address\n      } = position;\n      this.infoWindow.position = {\n        lat: lat,\n        lng: lng\n      };\n      this.infoWindow.template = `<b>${address}</b>`;\n      this.infoWindow.isFractionalZoomEnabled = true;\n      this.infoWindow.open = true;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["fetchHospitalsByParams","fetchHospitals","SetCountry","SetWilaya","getMarkers","setCenter","mark_marker","leave_marker","mapMutations","data","typeData","mapCenter","lat","lng","long","nextPage","hospitals","markers","moreExists","country","wilaya","countries","dropd1","dropd2","destination","path","flightPath","infoWindowPos","infoContent","currentMidx","infoWinOpen","closeModal","filter","showHosMap","search","focust","computed","getCenter","get","$store","state","map","set","push","getFlightPath","value","getHospitals","catalogue","getSpecialityName","speciality","specialityName","getSpecialities","specialities","tillOpnned","methods","toggleInfoWindow","marker","idx","openSelected","index","close","showInsoModal","commit","typeModal","hoverMarker","leaveMarker","getCountryWilaya","getters","getCountries","getCountryById","closeit","$refs","searchtxt","hideSearch","showSearch","fct","changeMyCountry","key","name","getMark","changeCountry","event","target","changeWilaya","getWilayaById","WhatToShow","showAll","getRestrictedHospital","speciaName","handleInput","e","getLocation","closure","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","locationErrorMessage","error","code","console","log","loadMore","mark","latLng","drawDirection","filePath","geodesic","strokeColor","strokeOpacity","strokeWeight","openInfoWindowTemplate","address","infoWindow","template","isFractionalZoomEnabled","open"],"sourceRoot":"","sources":["/Users/you/Desktop/work_dev/inso-frontend-master/src/components/MainContant/PhonePart9.vue"],"sourcesContent":["<template>\n    <div class=\"phoneIcnns my-4\">\n        <div class=\"flex icnss\">\n            <div class=\"col-12\" v-for=\"(hospital, index) in getHospitals\" :key=\"index\" @mouseover=\"hoverMarker(index)\" @mouseleave=\"leaveMarker(index)\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-6\">\n                            <img\n                            :src=\"hospital.image.length > 0 ? 'https://admin-assurance-private.assuranceiso.com/web/images/' + hospital.image : '/inso-pics/Myplaceholder.jpg'\"\n                            class=\"img-fluid\" style=\"object-fit: contain; background: rgba(0, 0, 0, 0.15); width: 100px; height: 70px;\" />\n                        </div>\n                        <div class=\"col-6\">\n                            <P class=\"tit-1\" style=\"font-weight: bold;\">{{ hospital.name }}</p>\n                            <p class=\"tit-2\">{{ hospital.name }}</p>\n                            <a @click=\"gotolinks(hospital.link, index)\" class=\"btn-primary\">S'avoir plus</a>\n                        </div>\n                    </div>\n                  </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <!--\n        <div class=\"col-sm-9 col-12\">\n                        <div class=\"row roo4\">\n                          <div class=\"col-12\">\n                            <h5 class=\"card-title\" style=\"font-weight: bold;\">{{ hospital.name }}</h5>\n                          </div>\n                          <div class=\"col-12\">\n                            <p class=\"card-title card-title-2\">{{ hospital.name }}</p>\n                          </div>\n                          <div class=\"row button-vers\">\n                            <div class=\"col-md-4 col-12\" style=\"font-size: 14px !important;\">\n                              <a @click=\"gotolinks(hospital.link, index)\" class=\"btn-primary\">\n                                Appeler</a>\n                            </div>\n                            <div class=\"col-md-4 col-12\" style=\"font-size: 14px !important;\">\n                              <a @click=\"gotolinks(hospital.link, index)\" class=\"btn-primary\">\n                                Localisation</a>\n                            </div>\n                            <div class=\"col-md-4 col-12\" style=\"font-size: 14px !important;\">\n                              <a @click=\"gotolinks(hospital.link, index)\" class=\"btn-primary\">\n                                <i class=\"fas fa-microsoft-word word-icon\"></i>\n                                Site-Web</a>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n    -->\n</template>\n<style scoped>\n.card {\n    margin-top:20px;\n    margin-left: 15px;\n    width: 100%;\n    font-size: 9px;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.card:hover {\n    border: 2px solid #1e85f1;\n    height: auto !important;\n}\n.btn-primary {\n    padding: 2px 12px 2px 12px;\n    font-size: 8px;\n}\n.tit-1 {\n    margin-top: 10px;\n}\n.tit-2 {\n    margin-top: -12px;\n}\n</style>\n<script>\nimport {\n  fetchHospitalsByParams,\n  fetchHospitals,\n  SetCountry,\n  SetWilaya,\n  getMarkers,\n  setCenter ,mark_marker ,leave_marker\n} \nfrom \"../../composable/index\";\nimport { mapMutations } from \"vuex\";\n\n\nexport default {\n  data() {\n    return {\n      typeData: \"map\",\n      mapCenter: {\n        lat: null,\n        lng: null,\n      },\n      lat: \"\",\n      long: \"\",\n      nextPage: 1,\n      hospitals: [],\n      markers: [],\n      moreExists: false,\n      country: \"\",\n      wilaya: [],\n      countries: [],\n      dropd1: false,\n      dropd2: false,\n      destination: {},\n      path: [],\n      flightPath: null,\n      infoWindowPos: null,\n      infoContent: null,\n      currentMidx: null,\n      infoWinOpen: false,\n      closeModal: false,\n      filter: false,\n      showHosMap: true,\n      search: false,\n      focust: false,\n    };\n  },\n  computed: {\n    getCenter: {\n      get() {\n        return {\n          lat: this.$store.state.map.lat,\n          lng: this.$store.state.map.long,\n        };\n      },\n      set() {\n        this.markers.push({\n          lat: this.$store.state.map.lat,\n          lng: this.$store.state.map.long,\n        });\n      },\n    },\n    getFlightPath: {\n      get() {\n        return this.flightPath\n      },\n      set(value) {\n        this.flightPath = value\n      },\n    },\n    getMarkers() {\n      this.getHospitals;\n      getMarkers(this.$store);\n      return this.$store.state.catalogue.markers;\n    },\n    getHospitals() {\n\n      return this.$store.state.catalogue.hospitals;\n    },\n    getSpecialityName() {\n      return this.$store.state.speciality.specialityName;\n    },\n    getSpecialities() {\n      return this.$store.state.speciality.specialities;\n    },\n    tillOpnned() {\n      return this.closeModal\n    },\n  },\n\n  methods: {\n\n    toggleInfoWindow: function (marker, idx) {\n\n      this.infoWindowPos = marker;\n\n      if (this.infoWindowPos) {\n        this.infoWinOpen = !this.infoWinOpen;\n        this.currentMidx = idx;\n        this.closeModal = false;\n      }\n    },\n    openSelected: function (index) {\n      if (index == this.currentMidx) {\n        if (!this.closeModal) {\n          return true\n        } else {\n          return false;\n        }\n\n      }\n      return false\n    },\n    close: function () {\n      this.closeModal = true;\n    },\n\n    ...mapMutations([\n      \"SET_showModal\", // map `this.increment()` to `this.$store.commit('increment')`\n\n      // `mapMutations` also supports payloads:\n      \"SET_typeModal\", // map `this.incrementBy(amount)` to `this.$store.commit('incrementBy', amount)`\n    ]),\n    showInsoModal(index) {\n      /* mark_marker(index) */\n      this.$store.commit(\"SET_typeModal\", { index, typeModal: \"hospital\" });\n    },\n    hoverMarker(index){\n      if(this.showHosMap){\n        mark_marker(index)\n      }\n    },\n    leaveMarker(index){\n      leave_marker(index)\n    },\n    getCountryWilaya() {\n      this.countries = this.$store.getters.getCountries;\n      if (this.country != \"\") {\n        this.wilaya = this.$store.getters.getCountryById(this.country).wilaya;\n      }\n    },\n    closeit() {\n      this.$refs.searchtxt.value = null;\n      this.focust = false;\n      this.hideSearch()\n    },\n    showSearch() {\n      this.search = true\n    },\n    hideSearch() {\n      !this.focust ? this.search = false : this.search\n    },\n    fct() {\n      this.showSearch()\n      this.focust = true\n    },\n    changeMyCountry(key) {\n      this.dropd2 = false;\n      this.dropd1 = false;\n      if (key != \"\") {\n        this.country = key;\n        this.getCountryWilaya();\n        SetCountry(this.$store, this.country, this.nextPage);\n        const { lat, long } = this.$store.getters.getCountryById(\n          this.country\n        ).name;\n\n        setCenter(this.$store, lat, long);\n        this.getHospitals;\n        this.getMark;\n      }\n    },\n    changeCountry(event) {\n      this.dropd2 = false;\n      this.dropd1 = false;\n      const country = event.target.value;\n      this.country = country;\n      this.getCountryWilaya();\n      SetCountry(this.$store, country, this.nextPage);\n      const { lat, long } = this.$store.getters.getCountryById(\n        this.country\n      ).name;\n      setCenter(this.$store, lat, long);\n      this.getHospitals;\n      this.getMarkers;\n    },\n    changeWilaya(event) {\n      const wilaya = event.target.value;\n      SetWilaya(this.$store, wilaya, this.nextPage);\n      this.getHospitals;\n      this.getMarkers;\n\n      const { lat, long } = this.$store.getters.getWilayaById(\n        this.country,\n        wilaya\n      );\n      setCenter(this.$store, lat, long);\n    },\n    WhatToShow() {\n      this.showAll = !this.showAll;\n    },\n    getRestrictedHospital(speciaName) {\n      fetchHospitalsByParams(this.$store, this.nextPage, speciaName);\n    },\n    handleInput(e) {\n      let speciaName = e.target.value;\n      fetchHospitalsByParams(this.$store, this.nextPage, speciaName);\n      this.getHospitals;\n      this.getMarkers;\n    },\n    getLocation(closure) {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            this.long = position.coords.longitude;\n            this.lat = position.coords.latitude;\n            this.mapCenter.lat = position.coords.latitude;\n            this.mapCenter.lng = position.coords.longitude;\n            this.locationErrorMessage = \"\";\n            setCenter(\n              this.$store,\n              position.coords.latitude,\n              position.coords.longitude\n            );\n            /*  localStorage.setItem(\"storedData\", {\n                long: position.coords.longitude,\n                lat: position.coords.latitude,\n              });*/\n            closure();\n          },\n          (error) => {\n            if (error.code === 1) {\n              this.locationErrorMessage = \"Please allow location access.\";\n            }\n          }\n        );\n      } else {\n        console.log(\"Geolocation is not supported by this browser.\");\n      }\n      /*}*/\n    },\n    loadMore() {\n      try {\n        this.nextPage++;\n        fetchHospitals(\n          this.$store,\n          this.nextPage,\n          this.long,\n          this.lat,\n          this.getSpecialityName,\n          \"\",\n          \"\"\n        );\n        this.moreExists = true;\n      } catch (error) {\n        this.moreExists = false;\n      }\n    },\n    mark(event) {\n      this.destination = { lat: event.latLng.lat(), lng: event.latLng.lng() };\n      this.drawDirection();\n    },\n    drawDirection() {\n      this.path = [this.getCenter, this.destination];\n      this.filePath = {\n        path: [\n          this.getCenter, this.destination\n        ],\n        geodesic: false,\n        strokeColor: \"#22c7e5\",\n        strokeOpacity: 1.0,\n        strokeWeight: 2,\n      };\n      this.getFlightPath = this.filePath;\n    },\n    openInfoWindowTemplate(position) {\n      const { lat, lng, address } = position\n      this.infoWindow.position = { lat: lat, lng: lng }\n      this.infoWindow.template = `<b>${address}</b>`\n\n      this.infoWindow.isFractionalZoomEnabled = true\n      this.infoWindow.open = true\n    }\n\n  },\n\n};\n</script>"]},"metadata":{},"sourceType":"module"}