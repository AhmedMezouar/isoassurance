{"ast":null,"code":"function ExtractLocation(closure) {\n  if (localStorage.getItem('position')) {\n    let {\n      long,\n      lat\n    } = localStorage.getItem(\"position\");\n    this.long = long;\n    this.lat = lat;\n  } else {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.long = position.coords.longitude;\n        this.lat = position.coords.latitude;\n        this.locationErrorMessage = \"\";\n        localStorage.setItem(\"storedData\", {\n          long: position.coords.longitude,\n          lat: position.coords.latitude\n        });\n        closure();\n      }, error => {\n        if (error.code === 1) {\n          this.locationErrorMessage = \"Please allow location access.\";\n        }\n      });\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  }\n}\nexport default {\n  ExtractLocation\n};","map":{"version":3,"names":["ExtractLocation","closure","localStorage","getItem","long","lat","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","locationErrorMessage","setItem","error","code","console","log"],"sources":["/Users/you/Desktop/work_dev/inso-frontend-master/src/composable/location.js"],"sourcesContent":[" function ExtractLocation(closure) {\r\n      if(localStorage.getItem('position')){\r\n        let { long, lat } = localStorage.getItem(\"position\");\r\n        this.long = long;\r\n        this.lat = lat;\r\n      }else{\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n                this.long = position.coords.longitude;\r\n                this.lat = position.coords.latitude;\r\n                this.locationErrorMessage = \"\";\r\n                localStorage.setItem(\"storedData\", {\r\n                  long: position.coords.longitude,\r\n                  lat: position.coords.latitude,\r\n                });\r\n                closure();\r\n            },\r\n            (error) => {\r\n                if (error.code === 1) {\r\n                this.locationErrorMessage = \"Please allow location access.\";\r\n                }\r\n            }\r\n            );\r\n        } else {\r\n            console.log(\"Geolocation is not supported by this browser.\");\r\n        }\r\n        }\r\n      }\r\n\r\n\r\nexport default { ExtractLocation };"],"mappings":"AAAC,SAASA,eAAe,CAACC,OAAO,EAAE;EAC7B,IAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAC;IAClC,IAAI;MAAEC,IAAI;MAAEC;IAAI,CAAC,GAAGH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACpD,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,GAAG,GAAGA,GAAG;EAChB,CAAC,MAAI;IACH,IAAIC,SAAS,CAACC,WAAW,EAAE;MACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACvCC,QAAQ,IAAK;QACV,IAAI,CAACL,IAAI,GAAGK,QAAQ,CAACC,MAAM,CAACC,SAAS;QACrC,IAAI,CAACN,GAAG,GAAGI,QAAQ,CAACC,MAAM,CAACE,QAAQ;QACnC,IAAI,CAACC,oBAAoB,GAAG,EAAE;QAC9BX,YAAY,CAACY,OAAO,CAAC,YAAY,EAAE;UACjCV,IAAI,EAAEK,QAAQ,CAACC,MAAM,CAACC,SAAS;UAC/BN,GAAG,EAAEI,QAAQ,CAACC,MAAM,CAACE;QACvB,CAAC,CAAC;QACFX,OAAO,EAAE;MACb,CAAC,EACAc,KAAK,IAAK;QACP,IAAIA,KAAK,CAACC,IAAI,KAAK,CAAC,EAAE;UACtB,IAAI,CAACH,oBAAoB,GAAG,+BAA+B;QAC3D;MACJ,CAAC,CACA;IACL,CAAC,MAAM;MACHI,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;IAChE;EACA;AACF;AAGN,eAAe;EAAElB;AAAgB,CAAC"},"metadata":{},"sourceType":"module"}